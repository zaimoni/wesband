#define DISPLAY_HEALING
	text=$display_hp
	{COLOR_HEAL}
#enddef

#define CLEAR_SPELL_DISPLAY ID PATH
	{FOREACH {PATH}.abilities.dummy q}
		[if]
			[variable]
				name={PATH}.abilities.dummy[$q].id
				equals="{ID}"
			[/variable]
			[then]
				{CLEAR_VARIABLE {PATH}.abilities.dummy[$q]}
				{VARIABLE q ${PATH}.abilities.dummy.length}
			[/then]
		[/if]
	{NEXT q}
#enddef

#define SIMPLE_SPELL_SETUP CT MP
	{VARIABLE cast_time {CT}}
	{VARIABLE mana_cost {MP}}
#enddef

#define WHITE_HEALING_SETUP
	{VARIABLE cast_time 2}
	{VARIABLE healing_number "$(0$current_unit.variables.abilities.magic_casting.power*3+4)"}
	{VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define GREEN_HEALING_SETUP
	{VARIABLE cast_time 2}
	{VARIABLE healing_number "$(0$current_unit.variables.abilities.magic_casting.power*2+4)"}
	{VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define SPIRIT_HEALING_SETUP
	{VARIABLE cast_time 2}
	{VARIABLE healing_number $current_unit.variables.abilities.magic_casting.power}
	[if]
		[variable]
			name=current_unit.variables.abilities.benevolent
			greater_than=0
		[/variable]
		[then]
			{VARIABLE_OP healing_number multiply 3}
		[/then]
	[/if]
	{VARIABLE_OP healing_number add 4}
	{VARIABLE mana_cost "$(0$healing_number/4+1)"}
#enddef

#define HEALING_SPELL_EFFECT
	{WITH_TARGETED_EVENT CASTING healing_display NULL_1 DISPLAY_HEALING}
#enddef

#define SILVER_TELEPORT_SETUP
	{FIND_DISTANCE $target_x $target_y $current_unit.x $current_unit.y}
	{VARIABLE cast_time "$(0$distance/3+2)"}
	{VARIABLE mana_cost 3}
	{VARIABLE spell_range "$(0$current_unit.variables.abilities.magic_casting.power*2)"}
#enddef

#define SILVER_TELEPORT_EFFECT
	{MOVEMENT_CALCULATOR $target_x $target_y current_unit}
	[if]
		[variable]
			name=movement_cost
			greater_than=60
		[/variable]
		[then]
			{DEBUG_MSG "You may only teleport to a location that you can move to normally."}
			{CANCEL_ACTION current_unit}
		[/then]
		[else]
			[if]
				[variable]
					name=distance
					greater_than=$spell_range
				[/variable]
				[then]
					{DEBUG_MSG "You may only teleport $spell_range hexes away."}
					{CANCEL_ACTION current_unit}
				[/then]
				[else]
					[teleport]
						[filter]
							x,y=$current_unit.x,$current_unit.y
						[/filter]
						x,y=$target_x,$target_y
					[/teleport]
					[sound]
						name=magic-faeriefire.ogg
					[/sound]
					{VARIABLE current_unit.x $target_x}
					{VARIABLE current_unit.y $target_y}
					[rouse_units]
						x=$target_x
						y=$target_y
						refresh=yes
					[/rouse_units]
					{CONFIRM_ACTION current_unit}
				[/else]
			[/if]
		[/else]
	[/if]
#enddef

#define MAPPING_SETUP
	{VARIABLE mapping_radius "$(0$current_unit.variables.abilities.magic_casting.power*5+10)"}
	{SIMPLE_SPELL_SETUP 3 6}
#enddef

#define MAPPING_APPLY PATH
	[remove_shroud]
		x,y=${PATH}.x,${PATH}.y
		radius=$mapping_radius
		side=$const.player_sides
	[/remove_shroud]	
#enddef

#define MAPPING_EFFECT
	{MAPPING_APPLY current_unit}	
	{CONFIRM_ACTION current_unit}
#enddef

#define DETECT_GOLD_SETUP
	{VARIABLE detect_gold_radius "$(0$current_unit.variables.abilities.magic_casting.power*4+20)"}
	{SIMPLE_SPELL_SETUP 3 6}
#enddef

#define DETECT_GOLD_APPLY PATH
	{FOREACH detected_gold_locs i}
		[remove_item]
			x,y=$detected_gold_locs[$i].x,$detected_gold_locs[$i].y
			image=icons/goldhere.png
		[/remove_item]
	{NEXT i}		
	{CLEAR_VARIABLE detected_gold_locs}
	[store_locations]
		x=${PATH}.x
		y=${PATH}.y
		radius=$detect_gold_radius
		variable=detect_gold_locations
	[/store_locations]
	{FOREACH detect_gold_locations i}
		{VARIABLE gold_detected 0}
		[if]
			[have_unit]
				x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
				[not]
					side=$const.player_sides
				[/not]
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
					[/filter]
					variable=detect_gold_store
				[/store_unit]
				[if]
					[variable]
						name=detect_gold_store.variables.personal_gold
						greater_than=0
					[/variable]
					[then]
						{VARIABLE gold_detected 1}
					[/then]
					[else]
						[if]
							[variable]
								name="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|.items.length"
								greater_than=0
							[/variable]
							[then]
								{FOREACH "ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|" o}
									[if]
										[variable]
											name=ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|[$o].items.category
											equals=gold
										[/variable]
										[then]
											{VARIABLE gold_detected 1}
										[/then]
									[/if]
								{NEXT o}
							[/then]
						[/if]		
					[/else]
				[/if]
				{CLEAR_VARIABLE detect_gold_store}
			[/then]
			[else]
				[if]
					[variable]
						name="ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|.items.length"
						greater_than=0
					[/variable]
					[then]
						{FOREACH "ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|" o}
							[if]
								[variable]
									name=ground.x$detect_gold_locations[$i].x|.y$detect_gold_locations[$i].y|[$o].items.category
									equals=gold
								[/variable]
								[then]
									{VARIABLE gold_detected 1}
								[/then]
							[/if]
						{NEXT o}
					[/then]
				[/if]		
			[/else]
		[/if]
		[if]
			[variable]
				name=gold_detected
				numerical_equals=1
			[/variable]
			[then]
				[remove_shroud]
					x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
					radius=1
					side=${PATH}.side
				[/remove_shroud]
				[item]
					x,y=$detect_gold_locations[$i].x,$detect_gold_locations[$i].y
					image=icons/goldhere.png
				[/item]
				[set_variables]
					name=detected_gold_locs
					mode=append
					[value]
						x=$detect_gold_locations[$i].x
						y=$detect_gold_locations[$i].y
					[/value]
				[/set_variables]
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE detect_gold_locations}
#enddef

#define DETECT_GOLD_EFFECT
	{DETECT_GOLD_APPLY current_unit}
	{CONFIRM_ACTION current_unit}
#enddef

#define PHOENIX_FIRE_SETUP
	{VARIABLE cast_time 4}
	{VARIABLE phoenix_amount "$((0$current_unit.variables.abilities.magic_casting.power+1)*4)"}
	{VARIABLE mana_cost "$(0$phoenix_amount/2)"}
#enddef

#define PHOENIX_FIRE_APPLY PATH
	[set_variables]
		name={PATH}.abilities.dummy
		mode=append
		[value]
			id=phoenix_fire
			name="+"
			description="This unit is protected from death, and will return with ${PATH}.variables.phoenix_fire health. This value degrades by 4 every round."
		[/value]
	[/set_variables]
#enddef

#define PHOENIX_FIRE_EFFECT
	[if]
		[variable]
			name=current_unit.variables.phoenix_fire
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=phoenix_amount
				less_than_equal_to=$current_unit.variables.phoenix_fire
			[/variable]
		[/and]
		[then]
			[message]
				speaker=narrator
				message=_"Your inner fire cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/then]
		[else]
			{VARIABLE current_unit.variables.phoenix_fire $phoenix_amount}
			{VARIABLE current_unit.variables.phoenix_filter 1}
			{PHOENIX_FIRE_APPLY current_unit}
			{CLEAR_VARIABLE phoenix_amount}
			{CONFIRM_ACTION current_unit}
		[/else]
	[/if]
#enddef

#define DETECT_UNITS_SETUP
	{VARIABLE detect_units_radius "$(0$current_unit.variables.abilities.magic_casting.power*5+15)"}
	{SIMPLE_SPELL_SETUP 3 6}
#enddef

#define DETECT_UNITS_APPLY PATH
	{FOREACH detected_units_locs i}
		[remove_item]
			x,y=$detected_units_locs[$i].x,$detected_units_locs[$i].y
			image=icons/unithere.png
		[/remove_item]
	{NEXT i}		
	{CLEAR_VARIABLE detected_units_locs}
	[store_locations]
		x=${PATH}.x
		y=${PATH}.y
		radius=$detect_units_radius
		variable=detect_units_locations
	[/store_locations]
	{FOREACH detect_units_locations i}
		{VARIABLE units_detected 0}
		[if]
			[have_unit]
				x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
				[not]
					side=$const.player_sides
				[/not]
				[filter_vision]
					visible=no
					viewing_side=$const.player_sides
				[/filter_vision]
			[/have_unit]
			[then]
				[remove_shroud]
					x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
					radius=1
					side=${PATH}.side
				[/remove_shroud]
				[item]
					x,y=$detect_units_locations[$i].x,$detect_units_locations[$i].y
					image=units/unknown-unit.png
				[/item]
				[set_variables]
					name=detected_units_locs
					mode=append
					[value]
						x=$detect_units_locations[$i].x
						y=$detect_units_locations[$i].y
					[/value]
				[/set_variables]
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE detect_units_locations}
#enddef

#define DETECT_UNITS_EFFECT
	{DETECT_UNITS_APPLY current_unit}
	{CONFIRM_ACTION current_unit}
#enddef

#define IMPROVED_DETECT_UNITS_SETUP
	{VARIABLE improved_detect_units_radius "$(0$current_unit.variables.abilities.magic_casting.power*4+12)"}
	{SIMPLE_SPELL_SETUP 3 6}
#enddef

#define IMPROVED_DETECT_UNITS_APPLY PATH
	{FOREACH improved_detected_units_locs i}
		[remove_item]
			x,y=$improved_detected_units_locs[$i].x,$improved_detected_units_locs[$i].y
			image=icons/unithere.png
		[/remove_item]
	{NEXT i}		
	{CLEAR_VARIABLE improved_detected_units_locs}
	[store_locations]
		x=${PATH}.x
		y=${PATH}.y
		radius=$improved_detect_units_radius
		variable=improved_detect_units_locations
	[/store_locations]
	{FOREACH improved_detect_units_locations i}
		{VARIABLE units_detected 0}
		[if]
			[have_unit]
				x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
				[not]
					side=$const.player_sides
				[/not]
				[filter_vision]
					visible=no
					viewing_side=$const.player_sides
				[/filter_vision]
			[/have_unit]
			[then]
				[store_unit]
					[filter]
						x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
					[/filter]
					variable=temp_detect_unit_store
				[/store_unit]
				[remove_shroud]
					x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
					radius=1
					side=${PATH}.side
				[/remove_shroud]
				[item]
					x,y=$improved_detect_units_locations[$i].x,$improved_detect_units_locations[$i].y
					image=icons/unknown-unit-$temp_detect_unit_store.level|.png
				[/item]
				[set_variables]
					name=improved_detected_units_locs
					mode=append
					[value]
						x=$improved_detect_units_locations[$i].x
						y=$improved_detect_units_locations[$i].y
					[/value]
				[/set_variables]
				{CLEAR_VARIABLE temp_detect_unit_store}
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE improved_detect_units_locations}
#enddef

#define IMPROVED_DETECT_UNITS_EFFECT
	{IMPROVED_DETECT_UNITS_APPLY current_unit}
	{CONFIRM_ACTION current_unit}
#enddef

#define CHOOSE_FIRE_ELEMENTAL
	[case]
		value=0
		{VARIABLE summon_type "WBD Fire Spirit"}
	[/case]
	[case]
		value=1
		{VARIABLE summon_type "WBD Brazier Creation"}
	[/case]
	[case]
		value=2
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Fire Wisp"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Living Furnace"}
			[/else]
		[/if]
	[/case]
	[else]
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Fire Ghost"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Lava Beast"}
			[/else]
		[/if]
	[/else]
#enddef

#define CHOOSE_WATER_ELEMENTAL
	[case]
		value=0
		{VARIABLE summon_type "WBD Spout"}
	[/case]
	[case]
		value=1
		{VARIABLE summon_type "WBD Tidal"}
	[/case]
	[case]
		value=2
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Ice Crab"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Undine"}
			[/else]
		[/if]
	[/case]
	[else]
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Ice Shell"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Tempest Spirit"}
			[/else]
		[/if]
	[/else]
#enddef

#define CHOOSE_EARTH_ELEMENTAL
	[case]
		value=0
		{VARIABLE summon_type "WBD Rolling Stones"}
	[/case]
	[case]
		value=1
		{VARIABLE summon_type "WBD Animated Rock"}
	[/case]
	[case]
		value=2
		{VARIABLE summon_type "WBD Rock Golem"}
	[/case]
	[else]
		{VARIABLE summon_type "WBD StoneTitan"}
	[/else]
#enddef

#define CHOOSE_AIR_ELEMENTAL
	[case]
		value=0
		{VARIABLE summon_type "WBD Wind Servant"}
	[/case]
	[case]
		value=1
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Razorbird"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Wind Herder"}
			[/else]
		[/if]
	[/case]
	[case]
		value=2
		{VARIABLE_OP summon_random rand 0..1}
		[if]
			[variable]
				name=summon_random
				numerical_equals=0
			[/variable]
			[then]
				{VARIABLE summon_type "WBD Thunderbird"}
			[/then]
			[else]
				{VARIABLE summon_type "WBD Zephyr"}
			[/else]
		[/if]
	[/case]
	[else]
		{VARIABLE summon_type "WBD Djinn"}
	[/else]
#enddef

#define SUMMON_ELEMENTAL_SETUP
	{VARIABLE max_summon_level $current_unit.variables.abilities.magic_casting.power} 
	{SIMPLE_SPELL_SETUP 3 6}
#enddef

#define SUMMON_ELEMENTAL_APPLY ELEMENT PATH
	[sound]
		name=magic-faeriefire.ogg
	[/sound]
	[unit]
		side=${PATH}.side
		type=$summon_type
		x=$target_x
		y=$target_y
		generate_name=no
		random_traits=yes
		random_gender=yes
		[variables]
			personal_gold=0
			is_summon=1
		[/variables]
		attacks_left=0
		upkeep=0
		experience=5
	[/unit]	
	[store_unit]
		[filter]
			x=$target_x
			y=$target_y
		[/filter]
		variable=summoned
	[/store_unit]
	{CREATE_BASE "summoned"}
	{VARIABLE unit_path "summoned"}
	[fire_event]
		name=create_npc_else
	[/fire_event]					
	[fire_event]
		name=npc_apply_traits
	[/fire_event]
	[fire_event]
		name=npc_apply_items
	[/fire_event]
	[construct_unit]
		variable=summoned
	[/construct_unit]
	{CLEAR_VARIABLE summoned}
#enddef

#define SUMMON_ELEMENTAL_EFFECT ELEMENT
	{VARIABLE_OP max_summon_level sub 1}
	[if]
		[variable]
			name=max_summon_level
			less_than=1
		[/variable]
		[then]
			{VARIABLE random 0}
		[/then]
		[else]
			{RANDOM 0..$max_summon_level}
		[/else]
	[/if]
	[switch]
		variable=random
		{CHOOSE_{ELEMENT}_ELEMENTAL}
	[/switch]
	[get_move_cost]
		x=$target_x
		y=$target_y
		type=$summon_type
	[/get_move_cost]
	{IF_VAR movement_cost less_than 60 (
		[then]
			{SUMMON_ELEMENTAL_APPLY {ELEMENT} current_unit}
			{CONFIRM_ACTION current_unit}
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_ "You cannot summon this creature here."
				side_for=$current_unit.side
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	)}
#enddef

#define PROTECTION_FROM_POISON_SETUP
	{VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
	{SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_FROM_POISON_APPLY PATH
	{CLEAR_VARIABLE {PATH}.status.poisoned}
	{VARIABLE {PATH}.variables.unpoisonable_flag 1}
	[set_variables]
		name={PATH}.abilities.dummy
		mode=append
		[value]
			id=protection_from_poison
			name="+"
			description="This unit is protected from poison for the next ${PATH}.variables.status.protection_from_poison rounds."
		[/value]
	[/set_variables]
#enddef

#define PROTECTION_FROM_POISON_EFFECT
	[store_unit]
		variable=target_unit
		[filter]
			x,y=$target_x,$target_y
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=protection_value
			greater_than=$target_unit.variables.status.protection_from_poison
		[/variable]
		[then]
			{VARIABLE target_unit.variables.status.protection_from_poison $protection_value}
			{CLEAR_SPELL_DISPLAY protection_from_poison target_unit}
			{PROTECTION_FROM_POISON_APPLY target_unit}	
			[unstore_unit]
				variable=target_unit
			[/unstore_unit]
			#this really needs to go, i need to think about how this is all going to work
			[if]
				[variable]
					name=target_x
					numerical_equals=$current_unit.x
				[/variable]
				[and]
					[variable]
						name=target_y
						numerical_equals=$current_unit.y
					[/variable]
				[/and]
				[then]
					[store_unit]
						variable=current_unit
						[filter]
							x,y=$target_x,$target_y
						[/filter]
					[/store_unit]
				[/then]
			[/if]
			{CONFIRM_ACTION current_unit}
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_"Your protection from poison cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	[/if]
	{CLEAR_VARIABLE target_unit}
#enddef

#define PROTECTION_FROM_SLOW_SETUP
	{VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
	{SIMPLE_SPELL_SETUP 3 5}
#enddef

#define PROTECTION_FROM_SLOW_APPLY PATH
	{CLEAR_VARIABLE {PATH}.status.slowed}
	{VARIABLE {PATH}.variables.unslowable_flag 1}
	[set_variables]
		name={PATH}.abilities.dummy
		mode=append
		[value]
			id=protection_from_slow
			name="+"
			description="This unit is protected from slowing for the next ${PATH}.variables.status.protection_from_slow rounds."
		[/value]
	[/set_variables]
#enddef

#define PROTECTION_FROM_SLOW_EFFECT
	[store_unit]
		variable=target_unit
		[filter]
			x,y=$target_x,$target_y
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=protection_value
			greater_than=$target_unit.variables.status.protection_from_slow
		[/variable]
		[then]
			{VARIABLE target_unit.variables.status.protection_from_slow $protection_value}
			{CLEAR_SPELL_DISPLAY protection_from_slow target_unit}
			{PROTECTION_FROM_SLOW_APPLY target_unit}	
			[unstore_unit]
				variable=target_unit
			[/unstore_unit]
			#this really needs to go, i need to think about how this is all going to work
			[if]
				[variable]
					name=target_x
					numerical_equals=$current_unit.x
				[/variable]
				[and]
					[variable]
						name=target_y
						numerical_equals=$current_unit.y
					[/variable]
				[/and]
				[then]
					[store_unit]
						variable=current_unit
						[filter]
							x,y=$target_x,$target_y
						[/filter]
					[/store_unit]
				[/then]
			[/if]
			{CONFIRM_ACTION current_unit}
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_"Your protection from slowing cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	[/if]
	{CLEAR_VARIABLE target_unit}
#enddef

#define PROTECTION_ARMOR_MAGIC_SETUP
	{VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
	{SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_ARMOR_MAGIC_APPLY PATH
	{VARIABLE protection_spell_value ${PATH}.variables.status.protection_armor_magic}
	{VARIABLE_OP protection_spell_value multiply 5}
	{FOREACH {PATH}.abilities.resistance o}
		[if]
			[variable]
				name={PATH}.abilities.resistance[$o].id
				equals=protection_armor_magic
			[/variable]
			[then]
				{CLEAR_VARIABLE {PATH}.abilities.resistance[$o]}
				{VARIABLE o ${PATH}.abilities.resistance.length}
			[/then]
		[/if]
	{NEXT o}		
	[if]
		[variable]
			name={PATH}.variables.status.protection_armor_magic
			greater_than=0
		[/variable]
		[then]
			[set_variables]
				name={PATH}.abilities.resistance
				mode=append
				[value]
					id=protection_armor_magic
					add=$protection_spell_value
					max_value=200
				[/value]
			[/set_variables]	
		[/then]
	[/if]
	{CLEAR_SPELL_DISPLAY protection_armor_magic ({PATH})}
	[if]
		[variable]
			name={PATH}.variables.status.protection_armor_magic
			greater_than=0
		[/variable]
		[then]
			[set_variables]
				name={PATH}.abilities.dummy
				mode=append
				[value]
					id=protection_armor_magic
					name="+"
					description="This unit is protected from damage by an extra $protection_spell_value|%. This value degrades by 5% every round."
				[/value]
			[/set_variables]
		[/then]
	[/if]
#enddef

#define PROTECTION_ARMOR_MAGIC_EFFECT
	[store_unit]
		variable=target_unit
		[filter]
			x,y=$target_x,$target_y
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=protection_value
			greater_than=$target_unit.variables.status.protection_armor_magic
		[/variable]
		[then]
			{VARIABLE target_unit.variables.status.protection_armor_magic $protection_value}
			{PROTECTION_ARMOR_MAGIC_APPLY target_unit}
			[unstore_unit]
				variable=target_unit
			[/unstore_unit]
			#this really needs to go, i need to think about how this is all going to work
			[if]
				[variable]
					name=target_x
					numerical_equals=$current_unit.x
				[/variable]
				[and]
					[variable]
						name=target_y
						numerical_equals=$current_unit.y
					[/variable]
				[/and]
				[then]
					[store_unit]
						variable=current_unit
						[filter]
							x,y=$target_x,$target_y
						[/filter]
					[/store_unit]
				[/then]
			[/if]
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_"Your protection cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	[/if]
	{CLEAR_VARIABLE target_unit}
	{CONFIRM_ACTION current_unit}
#enddef

#define PROTECTION_FROM_FIRE_SETUP
	{VARIABLE protection_value $current_unit.variables.abilities.magic_casting.power}
	{SIMPLE_SPELL_SETUP 2 4}
#enddef

#define PROTECTION_FROM_FIRE_APPLY PATH
	{VARIABLE protection_spell_value ${PATH}.variables.status.protection_from_fire}
	{VARIABLE_OP protection_spell_value multiply 10}
	{FOREACH {PATH}.abilities.resistance o}
		[if]
			[variable]
				name={PATH}.abilities.resistance[$o].id
				equals=protection_from_fire
			[/variable]
			[then]
				{CLEAR_VARIABLE {PATH}.abilities.resistance[$o]}
				{VARIABLE o ${PATH}.abilities.resistance.length}
			[/then]
		[/if]
	{NEXT o}		
	[if]
		[variable]
			name={PATH}.variables.status.protection_from_fire
			greater_than=0
		[/variable]
		[then]
			[set_variables]
				name={PATH}.abilities.resistance
				mode=append
				[value]
					id=protection_from_fire
					add=$protection_spell_value
					max_value=200
					apply_to=fire
				[/value]
			[/set_variables]	
		[/then]
	[/if]
	{CLEAR_SPELL_DISPLAY protection_from_fire ({PATH})}
	[if]
		[variable]
			name={PATH}.variables.status.protection_from_fire
			greater_than=0
		[/variable]
		[then]
			[set_variables]
				name={PATH}.abilities.dummy
				mode=append
				[value]
					id=protection_from_fire
					name="+"
					description="This unit is protected from fire damage by an extra $protection_spell_value|%. This value degrades by 10% every round."
				[/value]
			[/set_variables]
		[/then]
	[/if]
#enddef

#define PROTECTION_FROM_FIRE_EFFECT
	[store_unit]
		variable=target_unit
		[filter]
			x,y=$target_x,$target_y
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=protection_value
			greater_than=$target_unit.variables.status.protection_from_fire
		[/variable]
		[then]
			{VARIABLE target_unit.variables.status.protection_from_fire $protection_value}
			{PROTECTION_FROM_FIRE_APPLY target_unit}
			[unstore_unit]
				variable=target_unit
			[/unstore_unit]
			#this really needs to go, i need to think about how this is all going to work
			[if]
				[variable]
					name=target_x
					numerical_equals=$current_unit.x
				[/variable]
				[and]
					[variable]
						name=target_y
						numerical_equals=$current_unit.y
					[/variable]
				[/and]
				[then]
					[store_unit]
						variable=current_unit
						[filter]
							x,y=$target_x,$target_y
						[/filter]
					[/store_unit]
				[/then]
			[/if]
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_"Your protection cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	[/if]
	{CLEAR_VARIABLE target_unit}
	{CONFIRM_ACTION current_unit}
#enddef

#define METAL_TO_DRAIN_SETUP
	{VARIABLE drain_value $current_unit.variables.abilities.magic_casting.power}
	{SIMPLE_SPELL_SETUP 1 1}
#enddef

#define METAL_TO_DRAIN_APPLY PATH
	{FOREACH {PATH}.attack.specials.drains o}
		[if]
			[variable]
				name={PATH}.attack.specials.drains[$o].id
				equals=metal_to_drain
			[/variable]
			[then]
				{CLEAR_VARIABLE {PATH}.attack.specials[$o]}
				{VARIABLE o ${PATH}.attack.specials.length}
			[/then]
		[/if]
	{NEXT o}
	[if]
		[variable]
			name={PATH}.variables.status.metal_to_drain
			greater_than=0
		[/variable]
		[variable]
			name={PATH}.attack.material
			equals="metal"
		[/variable]
		[variable]
			name={PATH}.attack.range
			equals=melee
		[/variable]
		[then]
			[set_variables]
				name={PATH}.attack.specials
				mode=merge
				[value]
					[drains]
				        id=metal_to_drain
				        name= _ "drains"
				        description= _ "Drain:
This unit drains health from living units, healing itself for half the amount of damage it deals (rounded down)."
				    [/drains]
				[/value]
			[/set_variables]	
		[/then]
	[/if]	
#enddef

#define METAL_TO_DRAIN_EFFECT
	[store_unit]
		variable=target_unit
		[filter]
			x,y=$target_x,$target_y
		[/filter]
	[/store_unit]
	[if]
		[variable]
			name=drain_value
			greater_than=$target_unit.variables.status.metal_to_drain
		[/variable]
		[then]
			{VARIABLE target_unit.variables.status.metal_to_drain $drain_value}
			{METAL_TO_DRAIN_APPLY target_unit}
			[unstore_unit]
				variable=target_unit
			[/unstore_unit]
			#this really needs to go, i need to think about how this is all going to work
			[if]
				[variable]
					name=target_x
					numerical_equals=$current_unit.x
				[/variable]
				[and]
					[variable]
						name=target_y
						numerical_equals=$current_unit.y
					[/variable]
				[/and]
				[then]
					[store_unit]
						variable=current_unit
						[filter]
							x,y=$target_x,$target_y
						[/filter]
					[/store_unit]
				[/then]
			[/if]
		[/then]
		[else]
			[message]
				speaker=narrator
				message=_"Drain duration cannot currently be increased in this manner."
				side_for=$side_number
			[/message]
			{CANCEL_ACTION current_unit}
		[/else]
	[/if]
	{CLEAR_VARIABLE target_unit}
	{CONFIRM_ACTION current_unit}
#enddef