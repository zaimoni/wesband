#upgrade macros
#define UPGRADE_OPTION ICON NAME DESCRIPTION COST CONDITION_ABLE CONDITION_UNABLE COMMAND
	[option]
		message="&"+{ICON}.png+"="+_ "{NAME}
<small>{DESCRIPTION}</small>"="{COST}"
		[show_if]
			{CONDITION_ABLE}
		[/show_if]
		[command]
			{COMMAND}
		[/command]
	[/option]
	[option]
		message="&"+{ICON}.png+"="+_ "<span foreground='red'>{NAME}
<small>{DESCRIPTION}</small></span>"="<span foreground='red'>{COST}</span>"
		[show_if]
			{CONDITION_UNABLE}
		[/show_if]
		[command]
		[/command]
	[/option]
#enddef


#define UPGRADE_COSTS_RECURRING PATH

	# all of these need paths

	{VARIABLE body_plus ${PATH}.variables.body}
	{VARIABLE_OP body_plus add 1}
	{VARIABLE body_cost $body_plus}
	{VARIABLE_OP body_cost add ${PATH}.variables.body_rate}
	{VARIABLE deft_plus ${PATH}.variables.deft}
	{VARIABLE_OP deft_plus add 1}
	{VARIABLE deft_cost $deft_plus}
	{VARIABLE_OP deft_cost add ${PATH}.variables.deft_rate}
	{VARIABLE mind_plus ${PATH}.variables.mind}
	{VARIABLE_OP mind_plus add 1}
	{VARIABLE mind_cost $mind_plus}
	{VARIABLE_OP mind_cost add ${PATH}.variables.mind_rate}

	{UPGRADE_HARD_WEAPON {PATH} bludgeon.damage bludgeon_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} bludgeon.attack bludgeon_attack}
	{VARIABLE bludgeon_attack_cost_half "$(0$bludgeon_attack_cost/2)"}
	{UPGRADE_HARD_WEAPON {PATH} light_blade.damage light_blade_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} light_blade.attack light_blade_attack}
	{VARIABLE light_blade_attack_cost_half "$(0$light_blade_attack_cost/2)"}
	{UPGRADE_EASY_WEAPON {PATH} heavy_blade.damage heavy_blade_damage}
	{UPGRADE_HARD_WEAPON_NUMBER {PATH} heavy_blade.attack heavy_blade_attack}
	{VARIABLE heavy_blade_attack_cost_half "$(0$heavy_blade_attack_cost/2)"}
	{UPGRADE_EASY_WEAPON {PATH} polearm.damage polearm_damage}
	{UPGRADE_HARD_WEAPON_NUMBER {PATH} polearm.attack polearm_attack}
	{VARIABLE polearm_attack_cost_half "$(0$polearm_attack_cost/2)"}

	{UPGRADE_HARD_WEAPON {PATH} lob.damage lob_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} lob.attack lob_attack}
	{VARIABLE lob_attack_cost_half "$(0$lob_attack_cost/2)"}
	{UPGRADE_HARD_WEAPON {PATH} thrown_light_blade.damage thrown_light_blade_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} thrown_light_blade.attack thrown_light_blade_attack}
	{VARIABLE thrown_light_blade_attack_cost_half "$(0$thrown_light_blade_attack_cost/2)"}
	{UPGRADE_HARD_WEAPON {PATH} thrown_heavy_blade.damage thrown_heavy_blade_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} thrown_heavy_blade.attack thrown_heavy_blade_attack}
	{VARIABLE thrown_heavy_blade_attack_cost_half "$(0$thrown_heavy_blade_attack_cost/2)"}
	{UPGRADE_MEDIUM_WEAPON {PATH} bow.damage bow_damage}
	{UPGRADE_MEDIUM_WEAPON_NUMBER {PATH} bow.attack bow_attack}
	{VARIABLE bow_attack_cost_half "$(0$bow_attack_cost/2)"}
	{UPGRADE_EASY_WEAPON {PATH} javelin.damage javelin_damage}
	{UPGRADE_HARD_WEAPON_NUMBER {PATH} javelin.attack javelin_attack}
	{VARIABLE javelin_attack_cost_half "$(0$javelin_attack_cost/2)"}
	{UPGRADE_HARD_WEAPON {PATH} crossbow.damage crossbow_damage}
	{UPGRADE_EASY_WEAPON_NUMBER {PATH} crossbow.attack crossbow_attack}
	{VARIABLE crossbow_attack_cost_half "$(0$crossbow_attack_cost/2)"}

	{UPGRADE_TRIVIAL {PATH} variables.max_hp_level hp_level}
	{UPGRADE_SUPERHARD {PATH} variables.evade_level evade}
	{UPGRADE_SUPERHARD {PATH} variables.moves_level moves}
	{UPGRADE_MEDIUM {PATH} variables.abilities.regen regen}
	{UPGRADE_HARD {PATH} variables.abilities.thunderstick_tinker ts_tinker}

	{VARIABLE magic_power_cost ${PATH}.variables.abilities.magic_casting.power}
	{VARIABLE_OP magic_power_cost multiply 4}
	{VARIABLE_OP magic_power_cost add 5}

	{VARIABLE magic_speed_cost ${PATH}.variables.abilities.magic_casting.speed}
	{VARIABLE_OP magic_speed_cost multiply 5}
	{VARIABLE_OP magic_speed_cost add 7}
	
	{VARIABLE magic_focus_cost ${PATH}.variables.abilities.magic_casting.focus}
	{VARIABLE_OP magic_focus_cost add 1}
	{VARIABLE_OP magic_focus_cost multiply 4}
#enddef

#define UPGRADE_ATT_CONDITION PATH ATT
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=${ATT}_cost
	[/variable]
#enddef

#define UPGRADE_ATT_BODY_EFFECT PATH
	{VARIABLE {PATH}.variables.body $body_plus}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $body_cost}
	{VARIABLE_OP {PATH}.hitpoints add 1}
	{VARIABLE_OP {PATH}.max_hitpoints add 1}
#enddef

#define UPGRADE_ATT_DEFT_EFFECT PATH
	{VARIABLE {PATH}.variables.deft $deft_plus}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $deft_cost}
#enddef

#define UPGRADE_ATT_MIND_EFFECT PATH
	{VARIABLE {PATH}.variables.mind $mind_plus}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $mind_cost}
	[if]
		[variable]
			name={PATH}.variables.abilities.magic_casting.max_mana
			greater_than=0
		[/variable]
		[then]
			{VARIABLE_OP {PATH}.variables.abilities.magic_casting.max_mana add 1}
			{VARIABLE_OP {PATH}.variables.abilities.magic_casting.mana add 1}
		[/then]
	[/if]
#enddef

#define UPGRADE_WEAPON_DAMAGE_CONDITION PATH CLASS DAMAGE_REQUIRED_ATT
	[variable]
		name={PATH}.variables.inventory.type.{CLASS}
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=${CLASS}_damage_cost
	[/variable]
	[variable]
		name={PATH}.variables.{DAMAGE_REQUIRED_ATT}
		greater_than_equal_to=${CLASS}_damage_cost
	[/variable]
#enddef
#define UPGRADE_WEAPON_DAMAGE_EFFECT PATH CLASS 
	{VARIABLE_OP {PATH}.variables.weapon_skills.{CLASS}.damage add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub ${CLASS}_damage_cost}
#enddef


#define UPGRADE_WEAPON_STRIKE_CONDITION PATH CLASS NUMBER_REQUIRED_ATT NUMBER_REQUIRED_ATT2
	[variable]
		name={PATH}.variables.inventory.type.{CLASS}
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=${CLASS}_attack_cost
	[/variable]
	[variable]
		name={PATH}.variables.{NUMBER_REQUIRED_ATT}
		greater_than_equal_to=${CLASS}_attack_cost
	[/variable]
	[variable]
		name={PATH}.variables.{NUMBER_REQUIRED_ATT2}
		greater_than_equal_to=${CLASS}_attack_cost_half
	[/variable]
#enddef
#define UPGRADE_WEAPON_STRIKE_EFFECT PATH CLASS 
	{VARIABLE_OP {PATH}.variables.weapon_skills.{CLASS}.attack add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub ${CLASS}_attack_cost}
#enddef

#define UPGRADE_HP_CONDITION PATH
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=$hp_level_cost
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$hp_level_cost
	[/variable]
#enddef
#define UPGRADE_HP_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.max_hp_level add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $hp_level_cost}
	{VARIABLE_OP {PATH}.hitpoints add 4}
	{VARIABLE_OP {PATH}.max_hitpoints add 4}
#enddef

#define UPGRADE_EVADE_CONDITION PATH
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=$evade_cost
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$evade_cost
	[/variable]
#enddef
#define UPGRADE_EVADE_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.evade_level add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $evade_cost}
#enddef

#define UPGRADE_REGEN_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.regen
		greater_than_equal_to=0
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=$regen_cost
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$regen_cost
	[/variable]
#enddef
#define UPGRADE_REGEN_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.regen add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $regen_cost}
#enddef

#define UPGRADE_MOVES_CONDITION PATH
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=$moves_cost
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$moves_cost
	[/variable]
#enddef
#define UPGRADE_MOVES_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.moves_level add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $moves_cost}
	{VARIABLE_OP {PATH}.moves add 1}
	{VARIABLE_OP {PATH}.max_moves add 1}
	{VARIABLE_OP {PATH}.variables.max_moves add 1}
#enddef

#define UPGRADE_DUAL_WIELD_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wield
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_DUAL_WIELD_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.wield 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
	{VARIABLE {PATH}.variables.equipment_slots.melee_2 0}
#enddef

#define UPGRADE_TRIPLE_WIELD_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wield
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_TRIPLE_WIELD_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.wield 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	{VARIABLE {PATH}.variables.equipment_slots.melee_3 0}
#enddef
	
#define UPGRADE_SKIRMISHER_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.skirm
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_SKIRMISHER_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.skirm 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_DISTRACT_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.skirm
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.distract
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_DISTRACT_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.distract 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_DASH_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.dash
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.skirm
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_DASH_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.dash 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_GRACE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.grace
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.dash
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than=2
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=15
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=15
	[/variable]
#enddef
#define UPGRADE_GRACE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.grace 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 15}
#enddef

#define UPGRADE_FIRSTSTRIKE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.polearm
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.firststrike
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.polearm.damage
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_FIRSTSTRIKE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.firststrike 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_ENSNARE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.polearm
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.ensnare
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.polearm.damage
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_ENSNARE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.ensnare 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_POINTPIKE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.polearm
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.pointpike
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.polearm.damage
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_POINTPIKE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.pointpike 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
#enddef

#define UPGRADE_STORM_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.bludgeon
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.storm
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.bludgeon.damage
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_STORM_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.storm 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
#enddef

#define UPGRADE_CLEAVE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.heavy_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.cleave
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.heavy_blade.damage
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_CLEAVE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.cleave 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_BLOODLUST_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.bloodlust
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_BLOODLUST_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.bloodlust 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_RAGE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.bloodlust
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.rage
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_RAGE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.rage 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_BERSERK_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.rage
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.berserk
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_BERSERK_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.berserk 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_BRUTAL_ASSAULT_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.bludgeon
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.brutal
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.storm
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.abilities.bloodlust
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_BRUTAL_ASSAULT_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	{VARIABLE {PATH}.variables.abilities.brutal 1}
#enddef

#define UPGRADE_LEADERSHIP_1_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.leadership
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.level
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_LEADERSHIP_1_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.leadership 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 5}
#enddef

#define UPGRADE_LEADERSHIP_2_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.leadership
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.level
		greater_than=1
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=7
	[/variable]
#enddef
#define UPGRADE_LEADERSHIP_2_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.leadership add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_LEADERSHIP_3_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.leadership
		numerical_equals=2
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.level
		greater_than=2
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=9
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=9
	[/variable]
#enddef
#define UPGRADE_LEADERSHIP_3_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.leadership add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_LEADERSHIP_4_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.leadership
		numerical_equals=3
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.level
		greater_than=3
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=11
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=11
	[/variable]
#enddef
#define UPGRADE_LEADERSHIP_4_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.leadership add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_CRUELTY_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.cruelty
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.leadership
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_CRUELTY_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.cruelty 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_RANGER_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.ranger
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than=5
	[/variable]
#enddef
#define UPGRADE_RANGER_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.ranger 1}
	{VARIABLE {PATH}.variables.terrain.forest.defense 40}
	{VARIABLE {PATH}.variables.terrain.swamp_water.defense 50}
	{VARIABLE {PATH}.variables.terrain.swamp_water.movement 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 5}
#enddef

#define UPGRADE_TRAILBLAZER_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.trailblazer
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.ranger
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_TRAILBLAZER_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.trailblazer 1}
	{VARIABLE {PATH}.variables.terrain.forest.movement 1}
	{VARIABLE {PATH}.variables.terrain.hills.movement 1}
	{VARIABLE {PATH}.variables.terrain.frozen.movement 2}
	{VARIABLE {PATH}.variables.terrain.mountains.movement 2}
	{VARIABLE {PATH}.variables.terrain.shallow_water.movement 2}
	{VARIABLE {PATH}.variables.terrain.swamp_water.defense 40}
	{VARIABLE {PATH}.variables.terrain.shallow_water.defense 60}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
#enddef

#define UPGRADE_AMBUSH_FOREST_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.ambush_forest
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_AMBUSH_FOREST_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.ambush_forest 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_AMBUSH_MOUNTAINS_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.ambush_mountains
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_AMBUSH_MOUNTAINS_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.ambush_mountains 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_TRAILBLAZER_ELF_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.trailblazer_elf
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.ambush_forest
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_TRAILBLAZER_ELF_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.trailblazer_elf 1}
	{VARIABLE {PATH}.variables.terrain.mountains.movement 2}
	{VARIABLE {PATH}.variables.terrain.shallow_water.movement 2}
	{VARIABLE {PATH}.variables.terrain.swamp_water.defense 60}
	{VARIABLE {PATH}.variables.terrain.shallow_water.defense 70}
	{VARIABLE {PATH}.variables.terrain.sand.defense 60}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
#enddef

#define UPGRADE_STEADFAST_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.steadfast
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_STEADFAST_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.steadfast 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_BACKSTAB_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.backstab
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.light_blade.attack
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.alignment
		equals="chaotic"
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_BACKSTAB_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.backstab 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
#enddef

#define UPGRADE_TARGET_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.target
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.light_blade.damage
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.alignment
		equals="chaotic"
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_TARGET_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.target 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
#enddef

#define UPGRADE_SLASHDASH_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.dash
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.slashdash
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_SLASHDASH_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.slashdash 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_RIPOSTE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.riposte
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.light_blade.damage
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_RIPOSTE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.riposte 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_POISON_THROWN_LIGHT_BLADE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thrown_light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.backstab
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.abilities.poison_thrown_light_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.alignment
		equals="chaotic"
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.thrown_light_blade.damage
		greater_than=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_POISON_THROWN_LIGHT_BLADE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.poison_thrown_light_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_POISON_THROWN_LIGHT_BLADE_ORC_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thrown_light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.target
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.abilities.poison_thrown_light_blade_orc
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.alignment
		equals="chaotic"
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.thrown_light_blade.damage
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=4
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=4
	[/variable]
#enddef
#define UPGRADE_POISON_THROWN_LIGHT_BLADE_ORC_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.poison_thrown_light_blade_orc 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 4}
#enddef

#define UPGRADE_MARKSMAN_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.bow
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.marksman
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.bow.damage
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_MARKSMAN_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.marksman 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_MARKSMAN_THROWN_LIGHT_BLADE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thrown_light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.marksman_thrown_light_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.thrown_light_blade.damage
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_MARKSMAN_THROWN_LIGHT_BLADE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.marksman_thrown_light_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_AMMO_BOW_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.bow
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.remaining_ammo_bow
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.bow.attack
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_AMMO_BOW_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.remaining_ammo_bow 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_AMMO_JAVELIN_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.javelin
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.remaining_ammo_javelin
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.javelin.attack
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_AMMO_JAVELIN_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.remaining_ammo_javelin 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_AMMO_THROWN_LIGHT_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thrown_light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.remaining_ammo_thrown_light_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.thrown_light_blade.attack
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_AMMO_THROWN_LIGHT_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.remaining_ammo_thrown_light_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_AMMO_THROWN_HEAVY_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thrown_heavy_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.remaining_ammo_thrown_heavy_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.thrown_heavy_blade.attack
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_AMMO_THROWN_HEAVY_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.remaining_ammo_thrown_heavy_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_GOLIATH_BANE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.lob
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.goliath_bane
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.lob.damage
		greater_than=0
	[/variable]
#enddef
#define UPGRADE_GOLIATH_BANE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.goliath_bane 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_READIED_BOLT_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.crossbow
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.readied_bolt
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.crossbow.attack
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_READIED_BOLT_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.readied_bolt 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_FIRE_SHOT_BOW_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.bow
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.fire_shot_bow
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.bow.attack
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_FIRE_SHOT_BOW_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.fire_shot_bow 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_FIRE_SHOT_XBOW_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.crossbow
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.fire_shot_xbow
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.crossbow.attack
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_FIRE_SHOT_XBOW_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.fire_shot_xbow 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_SNEAK_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.sneak
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than_equal_to=3
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_SNEAK_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.sneak 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_MAGIC_INITIATE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_MAGIC_INITIATE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.human_magic 1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="mapping"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="mapping"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_RED_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_MAGIC_RED_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.human_magic add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
	{VARIABLE {PATH}.alignment "neutral"}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="detect_units"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			mana_cost=6
			command="detect_units"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_WHITE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_MAGIC_WHITE_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.human_magic add 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			#make construct unit that finds healing value and if cures
			user_name="heals"
			icon="potions/potion_blue"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="2 casting time"
			command=white_healing
		[/value]
		[value]
			user_name="protection_armor_magic"
			icon="armor/shield"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="protection_armor_magic"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_SILVER_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=2
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=15
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=15
	[/variable]
#enddef
#define UPGRADE_MAGIC_SILVER_EFFECT PATH
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="silver_teleport"
			icon="upgrades/silver_order"
			usable_self=0
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=1
			usable_dis=1
			infinite=1
			action_use="variable (2+) casting time"
			command=silver_teleport
			mana_cost=3
		[/value]
		[value]
			user_name="summon_fire_elemental"
			icon="attacks/vortex"
			usable_self=0
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=1
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command=summon_fire_elemental
			mana_cost=6
		[/value]
		[value]
			user_name="summon_air_elemental"
			icon="attacks/vortex"
			usable_self=0
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=1
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command=summon_air_elemental
			mana_cost=6
		[/value]
		[value]
			user_name="summon_earth_elemental"
			icon="attacks/vortex"
			usable_self=0
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=1
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command=summon_earth_elemental
			mana_cost=6
		[/value]
		[value]
			user_name="summon_water_elemental"
			icon="attacks/vortex"
			usable_self=0
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=1
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command=summon_water_elemental
			mana_cost=6
		[/value]
	[/set_variables]
	{VARIABLE_OP {PATH}.variables.abilities.human_magic add 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 15}
#enddef

#define UPGRADE_MAGIC_ELDER_CONDITION PATH
	[variable]
			name={PATH}.variables.abilities.human_magic
			numerical_equals=2
		[/variable]
		[variable]
			name={PATH}.variables.talentpoints
			greater_than_equal_to=20
		[/variable]
		[variable]
			name={PATH}.variables.mind
			greater_than_equal_to=20
		[/variable]
#enddef
#define UPGRADE_MAGIC_ELDER_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.human_magic add 3}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 20}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="phoenix_fire"
			icon="attacks/fireball"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="4 casting time"
			command="phoenix_fire"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_DARK_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.dark_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=5
	[/variable]
#enddef
#define UPGRADE_MAGIC_DARK_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.dark_magic 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 5}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="mapping"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="mapping"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_DARK_INITIATE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=1
	[/variable]
#enddef
#define UPGRADE_MAGIC_DARK_INITIATE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.dark_magic 1}
	{VARIABLE {PATH}.variables.abilities.human_magic 0}
	{VARIABLE {PATH}.alignment "chaotic"}
#enddef

#define UPGRADE_MAGIC_FAERIE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.faerie_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_MAGIC_FAERIE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.faerie_magic 1}
	[if]
		[variable]
			name={PATH}.variables.abilities.magic_casting.power
			numerical_equals=-1
		[/variable]
		[then]
			{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
			{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
			{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
			{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
		[/then]
	[/if]
	{VARIABLE {PATH}.variables.abilities.faerie_touch -1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="detect_units"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			mana_cost=6
			command="detect_units"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_FAERIE_TOUCH_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.faerie_touch
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=9
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=9
	[/variable]
#enddef
#define UPGRADE_FAERIE_TOUCH_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.faerie_touch 1}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].icon "touch-faerie"}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].user_name ("faerie touch")}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].description (_ "faerie touch")}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].class "magical"}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].class_description ("Magical")}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].body_damage_rate 0}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].deft_damage_rate 5}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].mind_damage_rate 10}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].deft_number_rate 5}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].mind_number_rate 5}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].special_type.magical_to_hit 1}
	[adjust_weapon_description]
		variable={PATH}.variables.inventory.weapons.melee[0]
	[/adjust_weapon_description]
	{VARIABLE_OP {PATH}.variables.talentpoints sub 9}
#enddef

#define UPGRADE_ELDRITCH_TOUCH_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.faerie_touch
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=14
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=14
	[/variable]
#enddef
#define UPGRADE_ELDRITCH_TOUCH_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.faerie_touch add 1}
	{VARIABLE {PATH}.variables.inventory.weapons.melee[0].type "arcane"}
	[adjust_weapon_description]
		variable={PATH}.variables.inventory.weapons.melee[0]
	[/adjust_weapon_description]
	{VARIABLE_OP {PATH}.variables.talentpoints sub 14}
#enddef

#define UPGRADE_MAGIC_WOOD_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wood_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=5
	[/variable]
#enddef
#define UPGRADE_MAGIC_WOOD_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.wood_magic 1}
	[if]
		[variable]
			name={PATH}.variables.abilities.magic_casting.power
			numerical_equals=-1
		[/variable]
		[then]
			{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
			{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
			{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
			{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
		[/then]
	[/if]
	{VARIABLE {PATH}.variables.abilities.vine_ensnare -1}
	{VARIABLE {PATH}.variables.abilities.vine_slows -1}
	{VARIABLE {PATH}.variables.abilities.faerie_touch -1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 5}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="protection_from_poison"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			mana_cost=4
			command="protection_from_poison"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_BRAMBLES_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wood_magic
		numerical_equals=1
	[/variable]
	[variable]
		name=current_unit.variables.abilities.faerie_magic
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.brambles
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_BRAMBLES_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.brambles 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_NATURE_HEAL_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wood_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.nature_heal
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.faerie_magic
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_NATURE_HEAL_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.nature_heal 1}
	{VARIABLE {PATH}.variables.abilities.faerie_magic 0}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			#make construct unit that finds healing value and if cures
			user_name="heals"
			icon="potions/potion_blue"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="2 casting time"
			command=green_healing
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_VINE_ENSNARE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wood_magic
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.abilities.vine_ensnare
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_VINE_ENSNARE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.vine_ensnare 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_VINE_SLOWS_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.vine_slows
		numerical_equals=-1
	[/variable]
	[variable]
		name=current_unit.variables.abilities.vine_ensnare
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
#enddef
#define UPGRADE_VINE_SLOWS_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.vine_slows 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
#enddef

#define UPGRADE_FAERIE_FORM_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.wood_magic
		greater_than=0
	[/variable]
	[or]
		[variable]
			name={PATH}.variables.abilities.faerie_magic
			numerical_equals=1
		[/variable]
	[/or]
	[and]
		[variable]
			name={PATH}.variables.abilities.faerie_form
			numerical_not_equals=1
		[/variable]
		[variable]
			name={PATH}.variables.talentpoints
			greater_than_equal_to=10
		[/variable]
		[variable]
			name={PATH}.variables.mind
			greater_than_equal_to=10
		[/variable]
	[/and]
#enddef
#define UPGRADE_FAERIE_FORM_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.faerie_form 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_MAGIC_RUNIC_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.runic_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
#enddef
#define UPGRADE_MAGIC_RUNIC_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.runic_magic 1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="detect_gold"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="detect_gold"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_TROLL_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.troll_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_MAGIC_TROLL_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.troll_magic 1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="protection_armor_magic"
			icon="armor/shield"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="protection_armor_magic"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_SWAMP_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.swamp_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_MAGIC_SWAMP_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.swamp_magic 1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.benevolent -1}
	{VARIABLE {PATH}.variables.abilities.baleful -1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			#make construct unit that finds healing value and if cures
			user_name="heals"
			icon="potions/potion_blue"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="2 casting time"
			command=spirit_healing
		[/value]
		[value]
			user_name="protection_from_poison"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=1
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			mana_cost=4
			command="protection_from_poison"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_TRIBAL_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.tribal_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_MAGIC_TRIBAL_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.tribal_magic 1}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	[set_variables]
		name={PATH}.variables.inventory.spells
		mode=append
		[value]
			user_name="improved_detect_units"
			icon="icons/scroll_red"
			usable_self=1
			usable_other_adj=0
			usable_other_dis=0
			usable_adj=0
			usable_dis=0
			infinite=1
			action_use="3 casting time"
			command="improved_detect_units"
		[/value]
	[/set_variables]
#enddef

#define UPGRADE_MAGIC_BENEVOLENT_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.benevolent
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_MAGIC_BENEVOLENT_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.baleful 0}
	{VARIABLE {PATH}.variables.abilities.benevolent 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_MAGIC_BALEFUL_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.baleful
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_MAGIC_BALEFUL_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.baleful 1}
	{VARIABLE {PATH}.variables.abilities.benevolent 0}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_MAGIC_WHITE_ILLUMINATES_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.illuminates
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than=2
	[/variable]
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=3
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=14
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=14
	[/variable]
#enddef
#define UPGRADE_MAGIC_WHITE_ILLUMINATES_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.illuminates 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 14}
#enddef

#define UPGRADE_MAGIC_WHITE_METAL_TO_ARCANE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.metal_to_arcane
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.inventory.weapons.melee[${PATH}.variables.equipment_slots.melee_1].material
		equals=metal
	[/variable]
	[variable]
		name={PATH}.variables.abilities.human_magic
		numerical_equals=3
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than=9
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than=9
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_MAGIC_WHITE_METAL_TO_ARCANE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.metal_to_arcane 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_MAGIC_DARK_PLAGUE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.plague
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.inventory.weapons.melee[${PATH}.variables.equipment_slots.melee_1].special_type.plague
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.dark_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_MAGIC_DARK_PLAGUE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.plague 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_MAGIC_DARK_SOULTRAP_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.soultrap
		numerical_not_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.dark_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than_equal_to=2
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_MAGIC_DARK_SOULTRAP_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.soultrap 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_MAGIC_CASTING_POWER_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.magic_casting.power
		greater_than=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$magic_power_cost
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=$magic_power_cost
	[/variable]
#enddef
#define UPGRADE_MAGIC_CASTING_POWER_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.magic_casting.power add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $magic_power_cost}
#enddef

#define UPGRADE_MAGIC_CASTING_SPEED_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.magic_casting.speed
		greater_than=-1
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$magic_speed_cost
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=$magic_speed_cost
	[/variable]
#enddef
#define UPGRADE_MAGIC_CASTING_SPEED_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.magic_casting.speed add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $magic_speed_cost}
#enddef

#define UPGRADE_HAMMER_FOCUS_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.runic_magic
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$magic_focus_cost
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=$magic_focus_cost
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=$magic_focus_cost
	[/variable]
#enddef
#define UPGRADE_HAMMER_FOCUS_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.magic_casting.focus add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $magic_focus_cost}
#enddef

#define UPGRADE_SWORD_FOCUS_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.faerie_magic
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$magic_focus_cost
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=$magic_focus_cost
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=$magic_focus_cost
	[/variable]
#enddef
#define UPGRADE_SWORD_FOCUS_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.magic_casting.focus add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $magic_focus_cost}
#enddef

#define UPGRADE_THUNDERSTICK_TINKER_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.thunderstick
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.thunderstick_tinker
		greater_than=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=$ts_tinker_cost
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=$ts_tinker_cost
	[/variable]
#enddef
#define UPGRADE_THUNDERSTICK_TINKER_EFFECT PATH
	{VARIABLE_OP {PATH}.variables.abilities.thunderstick_tinker add 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub $ts_tinker_cost}
	{IF_VAR {PATH}.canrecruit boolean_not_equals yes (
		[then]
			{IF_VAR {PATH}.variables.inventory.weapons.ranged[${PATH}.variables.equipment_slots.ranged].level less_than ${PATH}.variables.abilities.thunderstick_tinker (
				[then]
					{VARIABLE_OP {PATH}.variables.inventory.weapons.ranged[${PATH}.variables.equipment_slots.ranged].damage multiply 1.25}
					{VARIABLE_OP {PATH}.variables.inventory.weapons.ranged[${PATH}.variables.equipment_slots.ranged].max_damage multiply 1.25}
					{VARIABLE_OP {PATH}.variables.inventory.weapons.ranged[${PATH}.variables.equipment_slots.ranged].level add 1}
				[/then]			
			)}
		[/then]
	)}
#enddef


# non-PC upgrades

#define UPGRADE_NIGHTSTALK_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.nightstalk
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.evade_level
		greater_than_equal_to=3
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_NIGHTSTALK_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.nightstalk 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_POISON_LIGHT_BLADE_CONDITION PATH
	[variable]
		name={PATH}.variables.inventory.type.light_blade
		greater_than_equal_to=1
	[/variable]
	[variable]
		name={PATH}.variables.abilities.poison_light_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.weapon_skills.light_blade.damage
		greater_than=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
#enddef
#define UPGRADE_POISON_LIGHT_BLADE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.poison_light_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
#enddef

#define UPGRADE_BATTLE_TUTOR_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.battle_tutor
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=6
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=6
	[/variable]
#enddef
#define UPGRADE_BATTLE_TUTOR_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.battle_tutor 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 6}
#enddef

#define UPGRADE_KUSARIGAMA_SLOWS_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.kusarigama_slows
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.attack.user_name
		equals=kusarigama
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=5
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=5
	[/variable]
#enddef
#define UPGRADE_KUSARIGAMA_SLOWS_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.kusarigama_slows 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 5}
#enddef

#define UPGRADE_KUSARIGAMA_POISON_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.kusarigama_poison
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.attack.user_name
		equals=kusarigama
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_KUSARIGAMA_POISON_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.kusarigama_poison 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_DREAD_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.dread
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.attack.class
		equals=bludgeon
	[/variable]
	[variable]
		name={PATH}.variables.body
		greater_than_equal_to=14
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=14
	[/variable]
#enddef
#define UPGRADE_DREAD_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.dread 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 14}
#enddef

#define UPGRADE_MINOTAUR_MAGIC_1_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.minotaur_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_MINOTAUR_MAGIC_1_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.minotaur_magic 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
#enddef

#define UPGRADE_MINOTAUR_MAGIC_2_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.minotaur_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_MINOTAUR_MAGIC_2_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.minotaur_magic 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_MINOTAUR_MAGIC_3_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.minotaur_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_MINOTAUR_MAGIC_3_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.minotaur_magic 3}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_NET_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.net
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=10
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=10
	[/variable]
#enddef
#define UPGRADE_NET_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.net 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 10}
#enddef

#define UPGRADE_ACCURACY_LIGHT_BLADE_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.accuracy_light_blade
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.inventory.type.light_blade
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_ACCURACY_LIGHT_BLADE_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.accuracy_light_blade 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_EVASION_POLEARM_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.evasion_polearm
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.inventory.type.polearm
		greater_than=0
	[/variable]
	[variable]
		name={PATH}.variables.deft
		greater_than_equal_to=8
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=8
	[/variable]
#enddef
#define UPGRADE_EVASION_POLEARM_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.evasion_polearm 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 8}
#enddef

#define UPGRADE_WITCH_MAGIC_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.witch_magic
		numerical_equals=-1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=7
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=7
	[/variable]
#enddef
#define UPGRADE_WITCH_MAGIC_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.witch_magic 1}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 7}
	{VARIABLE {PATH}.variables.abilities.magic_casting.power 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.speed 0}
	{VARIABLE {PATH}.variables.abilities.magic_casting.max_mana $current_unit.variables.mind}
	{VARIABLE {PATH}.variables.abilities.magic_casting.mana $current_unit.variables.abilities.magic_casting.max_mana}
#enddef

#define UPGRADE_WITCH_MAGIC_2_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.witch_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_WITCH_MAGIC_2_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.witch_magic 2}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_WITCH_MAGIC_3_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.witch_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_WITCH_MAGIC_3_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.witch_magic 3}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef

#define UPGRADE_WITCH_MAGIC_4_CONDITION PATH
	[variable]
		name={PATH}.variables.abilities.witch_magic
		numerical_equals=1
	[/variable]
	[variable]
		name={PATH}.variables.mind
		greater_than_equal_to=12
	[/variable]
	[variable]
		name={PATH}.variables.talentpoints
		greater_than_equal_to=12
	[/variable]
#enddef
#define UPGRADE_WITCH_MAGIC_4_EFFECT PATH
	{VARIABLE {PATH}.variables.abilities.witch_magic 4}
	{VARIABLE_OP {PATH}.variables.talentpoints sub 12}
#enddef


#define UPGRADE__CONDITION PATH

#enddef
#define UPGRADE__EFFECT PATH

#enddef


#attribute options

#define MENU_UPGRADE_BODY
	{UPGRADE_OPTION 
		(upgrades/body) 
		(Body: $current_unit.variables.body|)
		(Upgrade health, strength and vitality) 
		($body_cost|)
		({UPGRADE_ATT_CONDITION current_unit body})
		([variable]
			name=current_unit.variables.talentpoints
			less_than=$body_cost
		[/variable])
		({UPGRADE_ATT_BODY_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_DEFT
	{UPGRADE_OPTION 
		(upgrades/deft) 
		(Deft: $current_unit.variables.deft|)
		(Upgrade skill and quickness) 
		($deft_cost|)
		({UPGRADE_ATT_CONDITION current_unit deft})
		([variable]
			name=current_unit.variables.talentpoints
			less_than=$deft_cost
		[/variable])
		({UPGRADE_ATT_DEFT_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_MIND
	{UPGRADE_OPTION 
		(upgrades/mind) 
		(Mind: $current_unit.variables.mind|)
		(Upgrade mental power) 
		($mind_cost|)
		({UPGRADE_ATT_CONDITION current_unit mind})
		([variable]
			name=current_unit.variables.talentpoints
			less_than=$mind_cost
		[/variable])
		({UPGRADE_ATT_MIND_EFFECT current_unit})
	}
#enddef

#weapon skill options

#define MENU_UPGRADE_WEAPON_GIFT ICON DESCRIPTION CLASS_DESCRIPTION CLASS DAMAGE_REQUIRED_ATT NUMBER_REQUIRED_ATT NUMBER_REQUIRED_ATT2
	{UPGRADE_OPTION 
		(attacks/{ICON}) 
		({CLASS_DESCRIPTION} Damage, Current level: $current_unit.variables.weapon_skills.{CLASS}.damage|)
		(Add damage to {DESCRIPTION}.
Required: ${CLASS}_damage_cost| {DAMAGE_REQUIRED_ATT}) 
		(${CLASS}_damage_cost|)
		({UPGRADE_WEAPON_DAMAGE_CONDITION current_unit {CLASS} {DAMAGE_REQUIRED_ATT}})
		([variable]
			name=current_unit.variables.inventory.type.{CLASS}
			greater_than_equal_to=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=${CLASS}_damage_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.{DAMAGE_REQUIRED_ATT}
					less_than=${CLASS}_damage_cost
				[/variable]
			[/or]
		[/and])
		({UPGRADE_WEAPON_DAMAGE_EFFECT current_unit {CLASS}})
	}

	{UPGRADE_OPTION 
		(attacks/{ICON}) 
		({CLASS_DESCRIPTION} Strikes, Current level: $current_unit.variables.weapon_skills.{CLASS}.attack|)
		(Add one strike to {DESCRIPTION}.
Required: ${CLASS}_attack_cost| {NUMBER_REQUIRED_ATT}, ${CLASS}_attack_cost_half {NUMBER_REQUIRED_ATT2}) (${CLASS}_attack_cost|)
		({UPGRADE_WEAPON_STRIKE_CONDITION current_unit {CLASS} {NUMBER_REQUIRED_ATT} {NUMBER_REQUIRED_ATT2}})
		([variable]
			name=current_unit.variables.inventory.type.{CLASS}
			greater_than_equal_to=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=${CLASS}_attack_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.{NUMBER_REQUIRED_ATT}
					less_than=${CLASS}_attack_cost
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.{NUMBER_REQUIRED_ATT2}
					less_than=${CLASS}_attack_cost_half
				[/variable]
			[/or]
		[/and])
		({UPGRADE_WEAPON_STRIKE_EFFECT current_unit {CLASS}})
	}
#enddef

#upgrade misc

#define MENU_UPGRADE_HIT_POINTS
	{UPGRADE_OPTION 
		(upgrades/hitpoints) 
		(Upgrade Hit Points, Current level: $current_unit.variables.max_hp_level|)
		(Add 4 to maximum hit points
Required: $hp_level_cost| Body) 
		($hp_level_cost|)
		({UPGRADE_HP_CONDITION current_unit})
		([variable]
			name=current_unit.variables.body
			less_than=$hp_level_cost
		[/variable]
		[or]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$hp_level_cost
			[/variable]
		[/or])
		({UPGRADE_HP_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_EVADE
	{UPGRADE_OPTION 
		(upgrades/evade) 
		(Evade, Current level: $current_unit.variables.evade_level|)
		(Add 3% bonus to all terrain defense, affected by armor 
Required: $evade_cost| Deft) 
		($evade_cost|)
		({UPGRADE_EVADE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.deft
			less_than=$evade_cost
		[/variable]
		[or]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$evade_cost
			[/variable]
		[/or])
		({UPGRADE_EVADE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_REGEN
	{UPGRADE_OPTION 
		(upgrades/regen) 
		(Regenerates, Current level: $current_unit.variables.abilities.regen|)
		(Regenerate 2 HP per level at the start of the turn
Required: $regen_cost| Body) 
		($regen_cost|)
		({UPGRADE_REGEN_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.regen
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				less_than=$regen_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=$regen_cost
				[/variable]
			[/or]
		[/and])
		({UPGRADE_REGEN_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_MOVES
	{UPGRADE_OPTION 
		(upgrades/movement) 
		(Upgrade Movement, Current level: $current_unit.variables.moves_level|)
		(Increase maximum movement points by 1 
Required: $moves_cost| Deft) 
		($moves_cost|)
		({UPGRADE_MOVES_CONDITION current_unit})
		([variable]
			name=current_unit.variables.deft
			less_than=$moves_cost
		[/variable]
		[or]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$moves_cost
			[/variable]
		[/or])
		({UPGRADE_MOVES_EFFECT current_unit})
	}
#enddef

#ability gifts

#define MENU_ABILITY_DUAL_WIELD
	{UPGRADE_OPTION 
		(upgrades/wield-dual) 
		(Ability: Dual Wield)
		(Wield 2 melee weapons at once
Required: 4 Deft) 
		(4)
		({UPGRADE_DUAL_WIELD_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wield
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=4
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=4
				[/variable]
			[/or]
		[/and])
		({UPGRADE_DUAL_WIELD_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_TRIPLE_WIELD
	{UPGRADE_OPTION 
		(upgrades/wield-triple) 
		(Ability: Triple Wield)
		(Wield 3 melee weapons at once
Required: 8 Deft) 
		(8)
		({UPGRADE_TRIPLE_WIELD_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wield
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_TRIPLE_WIELD_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_SKIRMISHER
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Ability: Skirmisher)
		(Unarmored units ignore Zone of Control if evade > 1
disallows Bloodlust, disallows Firststrike
Required: 6 Deft, Evade 1) 
		(6)
		({UPGRADE_SKIRMISHER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.skirm
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.evade_level
				less_than=1
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
			[/or]
		[/and])
		({UPGRADE_SKIRMISHER_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_DISTRACT
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Ability: Distract)
		(Adjacent allies ignore Zone of Control
Required: 12 Deft, Evade 2) 
		(12)
		({UPGRADE_DISTRACT_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.skirm
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.distract
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=12
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_DISTRACT_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_DASH
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Weapon Special: Dash)
		(Use remaining movement points after attacking if evade > 5
Required: 10 Deft, Evade 2) 
		(10)
		({UPGRADE_DASH_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.dash
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.skirm
				numerical_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.evade_level
					less_than=2
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=10
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_DASH_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_GRACE
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Weapon Special: Deadly Grace)
		(Gain attack if unit defending on melee misses all strikes
active if evade > 7
Required: 15 Deft, Evade 3) 
		(15)
		({UPGRADE_GRACE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.grace
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.dash
				numerical_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.evade_level
					less_than=3
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=15
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=15
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_GRACE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_FIRSTSTRIKE
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Firststrike)
		(Firststrike on long-reach polearms
Required: 6 Deft, Polearm Damage 1) 
		(6)
		({UPGRADE_FIRSTSTRIKE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.firststrike
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.firststrike
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_FIRSTSTRIKE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_ENSNARE_1
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Ensnare Level 1)
		(Pikes/tridents gain 5% chance to hit on each hit
Required: 10 Deft, Polearm Damage 1) 
		(10)
		({UPGRADE_ENSNARE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.polearm
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.ensnare
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_ENSNARE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_ENSNARE_2
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Ensnare Level 2)
		(Pikes/tridents gain 10% chance to hit on each hit
Required: 14 Deft, Polearm Damage 2) 
		(14)
		([variable]
			name=current_unit.variables.abilities.ensnare
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				greater_than_equal_to=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.deft
						greater_than_equal_to=14
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.ensnare
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				less_than=2
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.ensnare add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_ENSNARE_3
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Ensnare Level 3)
		(Pikes/tridents gain 15% chance to hit on each hit
Required: 18 Deft) 
		(18)
		([variable]
			name=current_unit.variables.abilities.ensnare
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=18
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=18
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.ensnare
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=18
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=18
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.ensnare add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 18})
	}
#enddef

#define MENU_ABILITY_POINTPIKE_1
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Point+Pike Level 1)
		(Polearms gain 10% chance to hit on each miss, resets on hit
Required: 4 Deft, Polearm Damage 1) 
		(4)
		({UPGRADE_POINTPIKE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.polearm
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.pointpike
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=4
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=4
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_POINTPIKE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_POINTPIKE_2
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Point+Pike Level 2)
		(Polearms gain 20% chance to hit on each miss, resets on hit
Required: 8 Deft, Polearm Damage 2) 
		(8)
		([variable]
			name=current_unit.variables.abilities.pointpike
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				greater_than_equal_to=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=8
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.deft
						greater_than_equal_to=8
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.pointpike
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.polearm.damage
				less_than=2
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.pointpike add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 8})
	}
#enddef

#define MENU_ABILITY_POINTPIKE_3
	{UPGRADE_OPTION 
		(upgrades/firststrike) 
		(Weapon Special: Point+Pike Level 3)
		(Polearms gain 30% chance to hit on each miss, resets on hit
Required: 12 Deft) 
		(12)
		([variable]
			name=current_unit.variables.abilities.pointpike
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=12
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=12
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.pointpike
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=12
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=12
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.pointpike add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_STORM_1
	{UPGRADE_OPTION 
		(attacks/hammer-troll) 
		(Weapon Special: Storm Level 1)
		(Battle ends 2 strikes after attacker's last strike
Required: 4 Body, Bludgeon Damage 1) 
		(4)
		({UPGRADE_STORM_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.bludgeon
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.storm
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.bludgeon.damage
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=4
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=4
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_STORM_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_STORM_2
	{UPGRADE_OPTION 
		(attacks/hammer-troll) 
		(Weapon Special: Storm Level 2)
		(Battle ends 1 strikes after attacker's last strike
Required: 8 Body) 
		(8)
		([variable]
			name=current_unit.variables.abilities.storm
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=8
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=8
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.storm
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=8
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.storm add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 8})
	}
#enddef

#define MENU_ABILITY_STORM_3
	{UPGRADE_OPTION 
		(attacks/hammer-troll) 
		(Weapon Special: Storm Level 3)
		(Battle ends after attacker's last strike
Required: 12 Body) 
		(12)
		([variable]
			name=current_unit.variables.abilities.storm
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=12
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=12
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.storm
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=12
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=12
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.storm add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_CLEAVE_1
	{UPGRADE_OPTION 
		(attacks/battleaxe) 
		(Weapon Special: Cleave Level 1)
		(Enemies adjacent to both units in battle can take 1/8 damage
Required: 10 Body, Heavy Blade Damage 1) 
		(10)
		({UPGRADE_CLEAVE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.heavy_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.cleave
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.heavy_blade.damage
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_CLEAVE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_CLEAVE_2
	{UPGRADE_OPTION 
		(attacks/battleaxe) 
		(Weapon Special: Cleave Level 2)
		(Enemies adjacent to both units in attack can take 1/6 damage
Required: 14 Body) 
		(14)
		([variable]
			name=current_unit.variables.abilities.cleave
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.cleave
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.cleave add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_CLEAVE_3
	{UPGRADE_OPTION 
		(attacks/battleaxe) 
		(Weapon Special: Cleave Level 3)
		(Enemies adjacent to both units in attack can take 1/4 damage
Required: 18 Body) 
		(18)
		([variable]
			name=current_unit.variables.abilities.cleave
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=18
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=18
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.cleave
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=18
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=18
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.cleave add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 18})
	}
#enddef

#define MENU_ABILITY_BLOODLUST_1
	{UPGRADE_OPTION 
		(attacks/frenzy) 
		(Weapon Special: Bloodlust Level 1)
		(Can attack again if target killed on the first strike
Required: 6 Body, Melee weapons only) 
		(6)
		({UPGRADE_BLOODLUST_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=6
				[/variable]
			[/or]
			[not]
				[variable]
					name=current_unit.variables.body
					less_than=5
				[/variable]
			[/not]
		[/and])
		({UPGRADE_BLOODLUST_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_BLOODLUST_2
	{UPGRADE_OPTION 
		(attacks/frenzy) 
		(Weapon Special: Bloodlust Level 2)
		(Can attack again if target killed within two strikes, +1 move if on first strike 
Required: 10 Body, Melee weapons only) 
		(10)
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE current_unit.variables.abilities.bloodlust 2}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_BLOODLUST_3
	{UPGRADE_OPTION 
		(attacks/frenzy) 
		(Weapon Special: Bloodlust Level 3)
		(Can attack again if target killed within three strikes, +1 move if within two strikes
Required: 14 Body, Melee weapons only) 
		(14)
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.body
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE current_unit.variables.abilities.bloodlust 3}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_RAGE
	{UPGRADE_OPTION 
		(attacks/frenzy) 
		(Weapon Special: Rage)
		(Offensive combat with main melee weapon lasts twice as long 
Required: 6 Body) 
		(6)
		({UPGRADE_RAGE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.bloodlust
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.rage
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_RAGE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_BERSERK
	{UPGRADE_OPTION 
		(attacks/frenzy) 
		(Weapon Special: Berserk)
		(Rage lengthened by 1 combat round, defensive combat length doubled
Required: 12 Body) 
		(12)
		({UPGRADE_BERSERK_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.rage
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.berserk
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=12
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_BERSERK_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_BRUTAL_ASSAULT
	{UPGRADE_OPTION 
		(attacks/hammer-troll) 
		(Weapon Special: Brutal Assault)
		(When using Storm, deal 60% more damage per strike
but only half as many strikes per attack.
Required: 8 Body, Storm 1, Bloodlust 1) 
		(8)
		({UPGRADE_BRUTAL_ASSAULT_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.bludgeon
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.brutal
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.storm
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.bloodlust
					greater_than=0
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.body
						less_than=8
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.talentpoints
							less_than=8
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_BRUTAL_ASSAULT_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_LEADERSHIP_1
	{UPGRADE_OPTION 
		(upgrades/leadership-1) 
		(Weapon Special: Leadership Level 1)
		(Enhance attacks of surrounding level 0 allies 
Required: 5 Mind, 4 Body, 4 Deft, level 1) 
		(5)
		({UPGRADE_LEADERSHIP_1_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.leadership
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.level
				less_than=1
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=5
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=5
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=4
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=4
				[/variable]
			[/or]
		[/and])
		({UPGRADE_LEADERSHIP_1_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_LEADERSHIP_2
	{UPGRADE_OPTION 
		(upgrades/leadership-2) 
		(Ability: Leadership Level 2)
		(Enhance attacks of surrounding level 0 and 1 allies
Required: 6 Mind, 7 Body, 7 Deft, level 2)
		(6)
		({UPGRADE_LEADERSHIP_2_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.leadership
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=6
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.level
					less_than=2
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=7
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=7
				[/variable]
			[/or]
		[/and])
		({UPGRADE_LEADERSHIP_2_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_LEADERSHIP_3
	{UPGRADE_OPTION 
		(upgrades/leadership-3) 
		(Ability: Leadership Level 3)
		(Enhance attacks of surrounding level 0-2 allies
Required: 8 Mind, 9 Body, 9 Deft, level 3)
		(8)
		({UPGRADE_LEADERSHIP_3_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.leadership
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=9
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=9
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.level
					less_than=3
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=9
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=9
				[/variable]
			[/or]
		[/and])
		({UPGRADE_LEADERSHIP_3_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_LEADERSHIP_4
	{UPGRADE_OPTION 
		(upgrades/leadership-4) 
		(Ability: Leadership Level 4)
		(Enhance attacks of surrounding level 0-3 allies
Required: 10 Mind, 11 Body, 11 Deft, level 4)
		(10)
		({UPGRADE_LEADERSHIP_4_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.leadership
			numerical_equals=3
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.level
					less_than=4
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.body
					less_than=11
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=11
				[/variable]
			[/or]
		[/and])
		({UPGRADE_LEADERSHIP_4_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_CRUELTY
	{UPGRADE_OPTION 
		(upgrades/leadership-1) 
		(Ability: Cruelty)
		(5% more per level of leadership for chaotic units, 5% less for non-chaotic
Required: 8 Body)
		(8)
		({UPGRADE_CRUELTY_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.cruelty
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.leadership
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_CRUELTY_EFFECT current_unit})
	}
#enddef


#define MENU_ABILITY_RPG_HEALTHY
	{UPGRADE_OPTION 
		(upgrades/hitpoints) 
		(Trait: Healthy)
		(Rest while moving but not attacking
Required: 8 Body)
		(8)
		([variable]
			name=current_unit.variables.abilities.healthy
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				greater_than_equal_to=8
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=8
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.healthy
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
		[/and])
		({VARIABLE current_unit.variables.abilities.healthy 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 8})
	}
#enddef

#define MENU_ABILITY_RPG_FEARLESS
	{UPGRADE_OPTION 
		(upgrades/hitpoints) 
		(Trait: Fearless)
		(Fight normally during unfavorable times of day/night
Required: 6 Mind)
		(6)
		([variable]
			name=current_unit.variables.abilities.fearless
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				greater_than_equal_to=6
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=6
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.fearless
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
		[/and])
		({VARIABLE current_unit.variables.abilities.fearless 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 6})
	}
#enddef

#define MENU_ABILITY_RPG_LONER
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Loner)
		(Increase damage by 25% if not next to any allied unit
Required: 4 Mind, 6 Body, 6 Deft)
		(4)
		([variable]
			name=current_unit.variables.abilities.loner
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="neutral"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					greater_than_equal_to=4
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=4
					[/variable]
					[and]
						[variable]
							name=current_unit.variables.body
							greater_than=5
						[/variable]
						[and]
							[variable]
								name=current_unit.variables.deft
								greater_than=5
							[/variable]
						[/and]
					[/and]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.loner
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="neutral"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					less_than=4
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=4
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=6
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE current_unit.variables.abilities.loner 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 4})
	}
#enddef

#define MENU_ABILITY_RPG_RANGER
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Ranger)
		(60% forest def, 50% swamp def, 2 swamp move cost
Required: 5 Mind, 5 Deft)
		(5)
		({UPGRADE_RANGER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.ranger
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=5
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=5
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=5
				[/variable]
			[/or]
		[/and])
		({UPGRADE_RANGER_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_TRAILBLAZER
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Trailblazer)
		(-1 movement cost: forest, hills, frozen, mountains, shallow water
60% hills def, 60% swamp def, 40% shallow water def
Required: 7 Mind, 10 Deft)
		(7)
		({UPGRADE_TRAILBLAZER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.ranger
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.trailblazer
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					less_than=7
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=7
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_TRAILBLAZER_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_SURVIVALIST
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Survivalist)
		(Heals +8 and cures when on forest
Required: 12 Mind)
		(12)
		([variable]
			name=current_unit.variables.abilities.survivalist
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.ranger
				numerical_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.loner
					numerical_equals=1
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.mind
						greater_than_equal_to=12
					[/variable]
					[and]
						[variable]
							name=current_unit.variables.talentpoints
							greater_than_equal_to=12
						[/variable]
					[/and]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.ranger
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.survivalist
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.loner
					numerical_equals=1
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.mind
						less_than=12
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.talentpoints
							less_than=12
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({VARIABLE current_unit.variables.abilities.survivalist 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_RPG_AMBUSH_FOREST
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Ambush)
		(Ambush from forest if lightly armored evade > 3
Required: 6 Mind, 8 Deft)
		(6)
		({UPGRADE_AMBUSH_FOREST_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.ambush_forest
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_AMBUSH_FOREST_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_AMBUSH_MOUNTAINS
	{UPGRADE_OPTION 
		(upgrades/hitpoints) 
		(Ability: Ambush)
		(Ambush from mountains if lightly armored evade > 3
Required: 6 Mind, 8 Deft)
		(6)
		({UPGRADE_AMBUSH_MOUNTAINS_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.ambush_mountains
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_AMBUSH_MOUNTAINS_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RPG_TRAILBLAZER_ELF
	{UPGRADE_OPTION 
		(upgrades/loner) 
		(Ability: Trailblazer)
		(-1 movement cost: mountains, shallow water
40% sand def, 30% shallow water def, 40% swamp def
Required: 7 Mind, 8 Deft)
		(7)
		({UPGRADE_TRAILBLAZER_ELF_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.ambush_forest
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.trailblazer_elf
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					less_than=7
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=7
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_TRAILBLAZER_ELF_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_STEADFAST_1
	{UPGRADE_OPTION 
		(attacks/rectangular-shield) 
		(Ability: Steadfast Level 1)
		(Double resistances up to 40% on defense with a large shield
Required: 8 Body)
		(8)
		({UPGRADE_STEADFAST_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.steadfast
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_STEADFAST_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_STEADFAST_2
	{UPGRADE_OPTION 
		(attacks/rectangular-shield) 
		(Ability: Steadfast Level 2)
		(Double resistances up to 50% with a large enough shield
Required: 12 Body)
		(12)
		([variable]
			name=current_unit.variables.abilities.steadfast
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				greater_than_equal_to=12
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=12
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.steadfast
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				less_than=12
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.steadfast add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_STEADFAST_3
	{UPGRADE_OPTION 
		(attacks/rectangular-shield) 
		(Ability: Steadfast Level 3)
		(Double resistances up to 60% with a large enough shield
Required: 16 Body)
		(16)
		([variable]
			name=current_unit.variables.abilities.steadfast
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				greater_than_equal_to=16
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=16
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.steadfast
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.body
				less_than=16
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=16
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.steadfast add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 16})
	}
#enddef

#define MENU_ABILITY_BACKSTAB_1
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Backstab Level 1)
		(Double damage while backstabbing with daggers
Required: 4 Deft, Light Blade Damage 1)
		(4)
		({UPGRADE_BACKSTAB_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.backstab
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.light_blade.damage
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.alignment
					equals="chaotic"
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.deft
						less_than=4
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.talentpoints
							less_than=4
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_BACKSTAB_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_BACKSTAB_2
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Backstab Level 2)
		(250% damage while backstabbing with daggers
Required: 8 Deft)
		(8)
		([variable]
			name=current_unit.variables.abilities.backstab
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=8
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=8
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.backstab
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.backstab add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 8})
	}
#enddef

#define MENU_ABILITY_BACKSTAB_3
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Backstab Level 3)
		(300% damage while backstabbing with daggers
Required: 12 Deft)
		(12)
		([variable]
			name=current_unit.variables.abilities.backstab
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=12
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=12
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.backstab
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=12
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=12
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.backstab add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_TARGET_1
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Target Level 1)
		(Double damage, halve strikes with daggers
Required: 4 Deft, Light Blade Damage 1)
		(4)
		({UPGRADE_TARGET_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.target
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.light_blade.damage
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.alignment
					equals="chaotic"
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.deft
						less_than=4
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.talentpoints
							less_than=4
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_TARGET_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_TARGET_2
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Target Level 2)
		(250% damage, half strikes with daggers
Required: 8 Deft)
		(8)
		([variable]
			name=current_unit.variables.abilities.target
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=8
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=8
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.target
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.target add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 8})
	}
#enddef

#define MENU_ABILITY_TARGET_3
	{UPGRADE_OPTION 
		(upgrades/backstab) 
		(Weapon Special: Target Level 3)
		(300% damage, half strikes with daggers
Required: 12 Deft)
		(12)
		([variable]
			name=current_unit.variables.abilities.target
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=12
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=12
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.target
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.alignment
				equals="chaotic"
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=12
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=12
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.target add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_SLASHDASH_1
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Weapon Special: Slash+Dash Level 1)
		(Gain 1 movement point for every 2 strikes landed with foils
Required: 10 Deft)
		(10)
		({UPGRADE_SLASHDASH_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.dash
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.slashdash
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=10
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_SLASHDASH_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_SLASHDASH_2
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Weapon Special: Slash+Dash Level 2)
		(Gain 1 movement point for every strike landed with foils
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.slashdash
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.slashdash
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.slashdash add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_SLASHDASH_3
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Weapon Special: Slash+Dash Level 3)
		(Gain 2 movement points for every strike landed with foils
Required: 18 Deft)
		(18)
		([variable]
			name=current_unit.variables.abilities.slashdash
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=18
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=18
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.slashdash
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=18
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=18
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.slashdash add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 18})
	}
#enddef

#define MENU_ABILITY_RIPOSTE_1
	{UPGRADE_OPTION 
		(attacks/saber-human) 
		(Weapon Special: Riposte Level 1)
		(Enemy's miss, 60% chance to hit on your next strike, foils only
Required: 10 Deft, Light Blade Damage 1)
		(10)
		({UPGRADE_RIPOSTE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.riposte
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.light_blade.damage
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=10
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_RIPOSTE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_RIPOSTE_2
	{UPGRADE_OPTION 
		(attacks/saber-human) 
		(Weapon Special: Riposte Level 2)
		(Enemy's miss, 80% chance to hit on your next strike, foils only
Required: 14 Deft, Light Blade Damage 3)
		(14)
		([variable]
			name=current_unit.variables.abilities.riposte
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.light_blade.damage
				greater_than=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=14
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=14
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.riposte
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.riposte add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_RIPOSTE_3
	{UPGRADE_OPTION 
		(attacks/saber-human) 
		(Weapon Special: Riposte Level 3)
		(Enemy's miss, 100% chance to hit on your next strike, foils only
Required: 18 Deft, Light Blade Damage 3)
		(18)
		([variable]
			name=current_unit.variables.abilities.riposte
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.light_blade.damage
				greater_than=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					greater_than_equal_to=18
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						greater_than_equal_to=18
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.riposte
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=18
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=18
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.riposte add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 18})
	}
#enddef

#define MENU_ABILITY_POISON_THROWN_LIGHT_BLADE
	{UPGRADE_OPTION 
		(attacks/dagger-thrown-poison-human) 
		(Weapon Special: Poison Thrown Light Blade)
		(Add poison to thrown light blades
Required: 6 Mind, Thrown Light Blades Damage: 2)
		(6)
		({UPGRADE_POISON_THROWN_LIGHT_BLADE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thrown_light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.backstab
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.poison_thrown_light_blade
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.alignment
					equals="chaotic"
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.thrown_light_blade.damage
						numerical_equals=1
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.mind
							less_than=6
						[/variable]
					[/or]
					[or]
						[variable]
							name=current_unit.variables.talentpoints
							less_than=6
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_POISON_THROWN_LIGHT_BLADE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_POISON_THROWN_LIGHT_BLADE_ORC
	{UPGRADE_OPTION 
		(attacks/dagger-thrown-poison-orcish) 
		(Weapon Special: Poison Thrown Light Blade)
		(Add poison to thrown light blades
Required: 4 Mind, Thrown Light Blades Damage: 1)
		(4)
		({UPGRADE_POISON_THROWN_LIGHT_BLADE_ORC_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thrown_light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.target
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.poison_thrown_light_blade_orc
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.alignment
					equals="chaotic"
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.thrown_light_blade.damage
						numerical_equals=1
					[/variable]
					[and]
						[variable]
							name=current_unit.variables.mind
							less_than=4
						[/variable]
						[or]
							[variable]
								name=current_unit.variables.talentpoints
								less_than=4
							[/variable]
						[/or]
					[/and]
				[/and]
			[/and]
		[/and])
		({UPGRADE_POISON_THROWN_LIGHT_BLADE_ORC_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_1
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Marksman Level 1)
		(Gives bows 55% minimum chance to hit on offense
Required: 8 Deft, Bow Damage: 1)
		(8)
		({UPGRADE_MARKSMAN_CONDITION current_unit})
		([variable]
			name=current_unit.variables.nothing
			greater_than_equal_to=9000
		[/variable])
		({UPGRADE_MARKSMAN_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_2
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Marksman Level 2)
		(Gives bows 60% minimum chance to hit on offense
Required: 14 Deft, Bow Damage: 3)
		(14)
		([variable]
			name=current_unit.variables.abilities.marksman
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.bow.damage
						greater_than=2
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.marksman
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.weapon_skills.bow.damage
					less_than=3
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.marksman add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_3
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Marksman Level 3)
		(Gives bows 65% minimum chance to hit on offense
Required: 18 Deft, Bow Damage: 3)
		(18)
		([variable]
			name=current_unit.variables.abilities.marksman
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=18
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=18
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.bow.damage
						greater_than=2
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.marksman
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=18
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=18
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.weapon_skills.bow.damage
					less_than=3
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.marksman add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 18})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_1
	{UPGRADE_OPTION 
		(attacks/dagger-thrown-human) 
		(Weapon Special: Marksman Level 1)
		(Gives thrown light blades 50% minimum chance to hit on offense
Required: 6 Deft, Thrown Light Blade Damage: 1)
		(6)
		({UPGRADE_MARKSMAN_THROWN_LIGHT_BLADE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thrown_light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.marksman_thrown_light_blade
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
			[and]
				[variable]
					name=current_unit.variables.weapon_skills.thrown_light_blade.damage
					greater_than=0
				[/variable]
			[/and]
		[/and])
		({UPGRADE_MARKSMAN_THROWN_LIGHT_BLADE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_2
	{UPGRADE_OPTION 
		(attacks/dagger-thrown-human) 
		(Weapon Special: Marksman Level 2)
		(Gives thrown light blades 55% minimum chance to hit on offense
Required: 10 Deft, Thrown Light Blade Damage: 2)
		(10)
		([variable]
			name=current_unit.variables.abilities.marksman_thrown_light_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.thrown_light_blade.damage
						greater_than=1
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.marksman_thrown_light_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.weapon_skills.thrown_light_blade.damage
					less_than=2
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.marksman_thrown_light_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_3
	{UPGRADE_OPTION 
		(attacks/dagger-thrown-human) 
		(Weapon Special: Marksman Level 3)
		(Gives thrown light blades 60% minimum chance to hit on offense
Required: 14 Deft, Thrown Light Blade Damage: 3)
		(14)
		([variable]
			name=current_unit.variables.abilities.marksman_thrown_light_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.weapon_skills.thrown_light_blade.damage
						greater_than=2
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.marksman_thrown_light_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.marksman_thrown_light_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_AMMO_BOW_1
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Bow Level 1)
		(If target is killed, can attack again with remaining ammo -1
Required: 6 Deft, Bow Strikes: 1)
		(6)
		({UPGRADE_AMMO_BOW_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.bow
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.remaining_ammo_bow
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.bow.attack
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_AMMO_BOW_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_AMMO_BOW_2
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Bow Level 2)
		(If target is killed, can attack again with remaining ammo
Required: 10 Deft)
		(10)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_bow
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_bow
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_bow add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_AMMO_BOW_3
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Bow Level 3)
		(If target is killed, can attack again with remaining ammo +1
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_bow
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_bow
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_bow add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_AMMO_JAVELIN_1
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Javelin Level 1)
		(If target is killed, can attack again with remaining ammo -1
Required: 6 Deft, Javelin Strikes: 1)
		(6)
		({UPGRADE_AMMO_JAVELIN_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.javelin
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.remaining_ammo_javelin
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.javelin.attack
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_AMMO_JAVELIN_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_AMMO_JAVELIN_2
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Javelin Level 2)
		(If target is killed, can attack again with remaining ammo
Required: 10 Deft)
		(10)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_javelin
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_javelin
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_javelin add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_AMMO_JAVELIN_3
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Javelin Level 3)
		(If target is killed, can attack again with remaining ammo +1
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_javelin
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_javelin
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_javelin add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_LIGHT_1
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Light Blade Level 1)
		(If target is killed, can attack again with remaining ammo -1
Required: 6 Deft, Thrown Light Blade Strikes: 1)
		(6)
		({UPGRADE_AMMO_THROWN_LIGHT_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thrown_light_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_light_blade
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.thrown_light_blade.attack
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_AMMO_THROWN_LIGHT_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_LIGHT_2
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Light Blade Level 2)
		(If target is killed, can attack again with remaining ammo
Required: 10 Deft)
		(10)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_light_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_light_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_thrown_light_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_LIGHT_3
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Light Blade Level 3)
		(If target is killed, can attack again with remaining ammo +1
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_light_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_light_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_thrown_light_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_HEAVY_1
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Heavy Blade Level 1)
		(If target is killed, can attack again with remaining ammo -1
Required: 6 Deft, Thrown Heavy Blade Strikes: 1)
		(6)
		({UPGRADE_AMMO_THROWN_HEAVY_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thrown_heavy_blade
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.thrown_heavy_blade.attack
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_AMMO_THROWN_HEAVY_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_HEAVY_2
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Heavy Blade Level 2)
		(If target is killed, can attack again with remaining ammo
Required: 10 Deft)
		(10)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_AMMO_THROWN_HEAVY_3
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Remaining Ammo Thrown Heavy Blade Level 3)
		(If target is killed, can attack again with remaining ammo +1
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.remaining_ammo_thrown_heavy_blade add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_GOLIATH_BANE_1
	{UPGRADE_OPTION 
		(attacks/sling) 
		(Weapon Special: Goliath Bane Level 1)
		(10% damage bonus for each level of the enemy with slings on offense.
Required: 6 Deft, Lob Damage: 1)
		(6)
		({UPGRADE_GOLIATH_BANE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.lob
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.goliath_bane
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.lob.damage
				greater_than=0
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.deft
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_GOLIATH_BANE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_GOLIATH_BANE_2
	{UPGRADE_OPTION 
		(attacks/sling) 
		(Weapon Special: Goliath Bane Level 2)
		(20% damage bonus for each level of the enemy with slings on offense.
Required: 10 Deft)
		(10)
		([variable]
			name=current_unit.variables.abilities.goliath_bane
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=10
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=10
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.goliath_bane
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=10
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.goliath_bane add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 10})
	}
#enddef

#define MENU_ABILITY_GOLIATH_BANE_3
	{UPGRADE_OPTION 
		(attacks/sling) 
		(Weapon Special: Goliath Bane Level 3)
		(30% damage bonus for each level of the enemy with slings on offense.
Required: 14 Deft)
		(14)
		([variable]
			name=current_unit.variables.abilities.goliath_bane
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				greater_than_equal_to=14
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=14
				[/variable]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.goliath_bane
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.deft
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.goliath_bane add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 14})
	}
#enddef

#define MENU_ABILITY_READIED_BOLT
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Readied Bolt)
		(Firststrike on crossbows
Required: 8 Deft, Crossbow Strikes 1)
		(8)
		({UPGRADE_READIED_BOLT_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.crossbow
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.readied_bolt
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.crossbow.attack
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_READIED_BOLT_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_FIRE_SHOT_BOW
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Fire Shot Bow)
		(Add a bow fire attack 
Required: 8 Deft, Bow Strikes 1)
		(8)
		({UPGRADE_FIRE_SHOT_BOW_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.bow
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.fire_shot_bow
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.bow.attack
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_FIRE_SHOT_BOW_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_FIRE_SHOT_XBOW
	{UPGRADE_OPTION 
		(upgrades/marksman) 
		(Weapon Special: Fire Shot Crossbow)
		(Add a crossbow fire attack 
Required: 8 Deft, Crossbow Strikes 1)
		(8)
		({UPGRADE_FIRE_SHOT_XBOW_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.crossbow
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.fire_shot_xbow
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.weapon_skills.crossbow.attack
				greater_than_equal_to=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_FIRE_SHOT_XBOW_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_SNEAK
	{UPGRADE_OPTION 
		(upgrades/skirmisher) 
		(Ability: Sneak)
		(Unarmored units sneak if half or less movement is used if evade > 7
Required: 12 Deft, Evade 3)
		(12)
		({UPGRADE_SNEAK_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.sneak
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.evade_level
				less_than=3
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.deft
					less_than=12
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
			[/or]
			[not]
				[variable]
					name=current_unit.variables.evade_level
					less_than=1
				[/variable]
			[/not]
		[/and])
		({UPGRADE_SNEAK_EFFECT current_unit})
	}
#enddef

#magic abilities

#define MENU_ABILITY_MAGIC_INITIATE
	{UPGRADE_OPTION 
		(icons/scroll_red) 
		(Magic: Magical Initiate)
		(Spell: magic missile, 5-2 fire, +1 dmg/casting power
Required: 8 Mind)
		(8)
		({UPGRADE_MAGIC_INITIATE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_INITIATE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_RED
	{UPGRADE_OPTION 
		(attacks/fireball) 
		(Magic: Red Order)
		(Spell: fireball, 5-2 fire, +2 dmg/casting power
Required: 10 Mind)
		(10)
		({UPGRADE_MAGIC_RED_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=10
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_RED_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_WHITE
	{UPGRADE_OPTION 
		(upgrades/spirit) 
		(Magic: White Order)
		(Spell: light beam, 5-1 arcane, +2 dmg/casting power
Heals: +3 hp/casting power, 2 casting time
Required: 12 Mind)
		(12)
		({UPGRADE_MAGIC_WHITE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=12
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=12
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_WHITE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_SILVER
	{UPGRADE_OPTION 
		(upgrades/silver_order) 
		(Magic: Silver Order)
		(Spell: magic missile, 5-2 fire, +1 dmg/casting power
Teleport spell: 2+ casting time
Required: 15 Mind)
		(15)
		({UPGRADE_MAGIC_SILVER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=15
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=15
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_SILVER_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_ELDER
	{UPGRADE_OPTION 
		(attacks/lightning) 
		(Magic: Elder Order)
		(Spell: lightning, 4-1 fire, +3 dmg/casting power
Required: 20 Mind)
		(20)
		({UPGRADE_MAGIC_ELDER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=20
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=20
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_ELDER_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_DARK
	{UPGRADE_OPTION 
		(attacks/staff-necromantic) 
		(Magic: Dark Magic)
		(Spell: chill wave, 9-1 cold, +2 dmg/casting power
Spell: shadow wave, 6-1 arcane, +2 dmg/casting power
Required: 5 Mind)
		(5)
		({UPGRADE_MAGIC_DARK_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.dark_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=5
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=5
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_DARK_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_DARK_INITIATE
	{UPGRADE_OPTION 
		(attacks/staff-necromantic) 
		(Magic: Dark Magic)
		(Spell: chill wave, 9-1 cold, +2 dmg/casting power
Spell: shadow wave, 6-1 arcane, +2 dmg/casting power)
		(0)
		({UPGRADE_MAGIC_DARK_INITIATE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.human_magic
			numerical_equals=9000
		[/variable])
		({UPGRADE_MAGIC_DARK_INITIATE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_FAERIE
	{UPGRADE_OPTION 
		(attacks/faerie-fire) 
		(Magic: Faerie Magic)
		(Spell: faerie fire, 3-3 arcane, +2 dmg/casting power
Required: 6 Mind)
		(6)
		({UPGRADE_MAGIC_FAERIE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.faerie_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_FAERIE_EFFECT current_unit})
	}
#enddef

#define MENU_ABLITY_FAERIE_TOUCH
	{UPGRADE_OPTION 
		(attacks/touch-faerie) 
		(Magic: Faerie Touch)
		(Fist attack becomes magical, damage/strike bonuses
determined by casting power/casting speed
Required: 9 Mind)
		(9)
		({UPGRADE_FAERIE_TOUCH_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.faerie_touch
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=9
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=9
				[/variable]
			[/or]
		[/and])
		({UPGRADE_FAERIE_TOUCH_EFFECT current_unit})
	}
#enddef

#define MENU_ABLITY_ELDRITCH_TOUCH
	{UPGRADE_OPTION 
		(attacks/touch-faerie) 
		(Magic: Eldritch Touch)
		(Faerie Touch deals arcane damage
Required: 14 Mind)
		(14)
		({UPGRADE_ELDRITCH_TOUCH_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.faerie_touch
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=14
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=14
				[/variable]
			[/or]
		[/and])
		({UPGRADE_ELDRITCH_TOUCH_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_WOOD
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Forest Magic)
		(Spell: vines, 3-2 impact, +1 dmg/casting power
Required: 5 Mind)
		(5)
		({UPGRADE_MAGIC_WOOD_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wood_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=5
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=5
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_WOOD_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_BRAMBLES
	{UPGRADE_OPTION 
		(attacks/thorns) 
		(Magic: Brambles)
		(Spell: vines, 3-2 impact, +2 dmg/casting power
Spell: thorns, 4-2 magical, +2 dmg/casting power
Required: 8 Mind)
		(8)
		({UPGRADE_BRAMBLES_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wood_magic
			numerical_equals=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.brambles
			numerical_not_equals=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.faerie_magic
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_BRAMBLES_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_NATURE_HEAL
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Nature's Balm)
		(Heals: +2 hp/casting power, 2 casting time, excludes Faerie Magic
Required: 6 Mind)
		(6)
		({UPGRADE_NATURE_HEAL_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wood_magic
			numerical_equals=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.nature_heal
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.faerie_magic
				numerical_not_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=6
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_NATURE_HEAL_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_VINE_ENSNARE_1
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Grasping Vines Level 1)
		(Vines gain 5% chance to hit on each hit
Required: 8 Mind, Casting Power 1)
		(8)
		({UPGRADE_VINE_ENSNARE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wood_magic
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.vine_ensnare
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.magic_casting.power
					greater_than_equal_to=1
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=8
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.mind
							less_than=8
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_VINE_ENSNARE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_VINE_ENSNARE_2
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Grasping Vines Level 2)
		(Vines gain 10% chance to hit on each hit
Required: 12 Mind, Casting Power 2)
		(12)
		([variable]
			name=current_unit.variables.abilities.vine_ensnare
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.magic_casting.power
				greater_than_equal_to=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=12
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.mind
						greater_than_equal_to=12
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.vine_ensnare
			numerical_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.magic_casting.power
				less_than=2
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
			[/or]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=12
				[/variable]
			[/or]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.vine_ensnare add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 12})
	}
#enddef

#define MENU_ABILITY_VINE_ENSNARE_3
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Grasping Vines Level 3)
		(Vines gain 15% chance to hit on each hit
Required: 16 Mind)
		(16)
		([variable]
			name=current_unit.variables.abilities.wood_magic
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.vine_ensnare
				numerical_equals=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					greater_than_equal_to=16
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.mind
						greater_than_equal_to=16
					[/variable]
				[/and]
			[/and]
		[/and])
		([variable]
			name=current_unit.variables.abilities.wood_magic
			numerical_equals=2
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.vine_ensnare
				numerical_equals=2
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=16
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=16
					[/variable]
				[/or]
			[/and]
		[/and])
		({VARIABLE_OP current_unit.variables.abilities.vine_ensnare add 1}
		{VARIABLE_OP current_unit.variables.talentpoints sub 16})
	}
#enddef

#define MENU_ABILITY_VINE_SLOWS
	{UPGRADE_OPTION 
		(attacks/entangle) 
		(Magic: Entangling Vines)
		(Vines slow enemies on a successful attack
Required: 7 Mind, Grasping Vines, Casting Power 1)
		(7)
		({UPGRADE_VINE_SLOWS_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.vine_ensnare
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.vine_slows
				numerical_equals=-1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.magic_casting.power
					less_than=1
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=7
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=7
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_VINE_SLOWS_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_FAERIE_FORM
	{UPGRADE_OPTION 
		(attacks/thorns) 
		(Magic: Faerie Form)
		(Exchange faerie movement for -10% impact resistance
Required: 10 Mind)
		(10)
		({UPGRADE_FAERIE_FORM_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.wood_magic
			greater_than=0
		[/variable]
		[or]
			[variable]
				name=current_unit.variables.abilities.faerie_magic
				numerical_equals=1
			[/variable]
		[/or]
		[and]
			[variable]
				name=current_unit.variables.abilities.faerie_form
				numerical_not_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					greater_than=6
				[/variable]
				[and]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=10
					[/variable]
					[or]
						[variable]
							name=current_unit.variables.mind
							less_than=10
						[/variable]
					[/or]
				[/and]
			[/and]
		[/and])
		({UPGRADE_FAERIE_FORM_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_RUNIC
	{UPGRADE_OPTION 
		(upgrades/rune-stone-dark) 
		(Magic: Runic Magic)
		(Spell: lightning, 5-1 fire, +2 dmg/casting power
Required: 7 Mind)
		(7)
		({UPGRADE_MAGIC_RUNIC_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.runic_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=7
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=7
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_RUNIC_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_TROLL
	{UPGRADE_OPTION 
		(upgrades/rune-stone-dark) 
		(Magic: Troll Magic)
		(Spell: flame blast, 7-2 fire, +1 dmg/casting power
Required: 8 Mind)
		(8)
		({UPGRADE_MAGIC_TROLL_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.troll_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_TROLL_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_SWAMP
	{UPGRADE_OPTION 
		(upgrades/rune-stone-dark) 
		(Magic: Swamp Magic)
		(Spell: curse, 4-2 cold, +1 dmg/casting power
Heals: +1 hp/casting power, 2 casting time
Required: 6 Mind)
		(6)
		({UPGRADE_MAGIC_SWAMP_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.swamp_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=6
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=6
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_SWAMP_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_TRIBAL
	{UPGRADE_OPTION 
		(upgrades/rune-stone-dark) 
		(Magic: Tribal Magic)
		(Spell: curse, 6-1 pierce, drains, +1 dmg/casting power
Required: 8 Mind)
		(8)
		({UPGRADE_MAGIC_TRIBAL_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.tribal_magic
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=8
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_TRIBAL_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_BENEVOLENT
	{UPGRADE_OPTION 
		(upgrades/spirit) 
		(Magic: Benevolent Spirits)
		(Improves healing by +2 hp/casting power, excludes Baleful Spirits
Required: 10 Mind)
		(10)
		({UPGRADE_MAGIC_BENEVOLENT_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.benevolent
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=10
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_BENEVOLENT_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_BALEFUL
	{UPGRADE_OPTION 
		(attacks/curse) 
		(Magic: Baleful Spirits)
		(Improves curse by +2 dmg/casting power, excludes Benevolent Spirits
Required: 10 Mind)
		(10)
		({UPGRADE_MAGIC_BALEFUL_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.baleful
			numerical_equals=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=10
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=10
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_BALEFUL_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_WHITE_ILLUMINATES
	{UPGRADE_OPTION 
		(upgrades/spirit) 
		(Magic: Illuminates)
		(Illuminate your surroundings
Required: 14 Mind, Casting Power: 3)
		(14)
		({UPGRADE_MAGIC_WHITE_ILLUMINATES_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.illuminates
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.human_magic
				numerical_equals=3
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.abilities.magic_casting.power
					less_than=3
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=14
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=14
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_MAGIC_WHITE_ILLUMINATES_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_WHITE_METAL_TO_ARCANE
	{UPGRADE_OPTION 
		(attacks/sword-holy) 
		(Magic: Bless Weapon)
		(Enbue any metal weapon with arcane damage type
Required: 10 Mind, 10 Body, 10 Deft)
		(10)
		({UPGRADE_MAGIC_WHITE_METAL_TO_ARCANE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.metal_to_arcane
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.human_magic
				numerical_equals=3
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.mind
					less_than=10
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than_equal_to=9
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.deft
						less_than_equal_to=9
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.talentpoints
						less_than=10
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_MAGIC_WHITE_METAL_TO_ARCANE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_DARK_PLAGUE
	{UPGRADE_OPTION 
		(attacks/staff-plague) 
		(Magic: Plague)
		(Enbue a Necromancer's Staff with plague
Required: 8 Mind, Casting Power: 1)
		(8)
		({UPGRADE_MAGIC_DARK_PLAGUE_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.weapons.melee[$current_unit.variables.equipment_slots.melee_1].special_type.plague
			numerical_equals=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.plague
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.dark_magic
				numerical_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=8
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.abilities.magic_casting.power
						less_than=1
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=8
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_MAGIC_DARK_PLAGUE_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_MAGIC_DARK_SOULTRAP
	{UPGRADE_OPTION 
		(attacks/wail) 
		(Magic: Soul Trap)
		(Entrap a soul by sacrificing a living being with a dagger
Required: 12 Mind, Casting Power: 2)
		(12)
		({UPGRADE_MAGIC_DARK_SOULTRAP_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.soultrap
			numerical_not_equals=1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.abilities.dark_magic
				numerical_equals=1
			[/variable]
			[and]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=12
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.abilities.magic_casting.power
						less_than=2
					[/variable]
				[/or]
				[or]
					[variable]
						name=current_unit.variables.mind
						less_than=12
					[/variable]
				[/or]
			[/and]
		[/and])
		({UPGRADE_MAGIC_DARK_SOULTRAP_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_MAGIC_CASTING_POWER
	{UPGRADE_OPTION 
		(potions/potion_red_huge) 
		(Magic: Casting Power, Current level: $current_unit.variables.abilities.magic_casting.power|)
		(Add damage to magic attacks, according to order. 
Required: $magic_power_cost| Mind)
		($magic_power_cost|)
		({UPGRADE_MAGIC_CASTING_POWER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.magic_casting.power
			greater_than=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$magic_power_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=$magic_power_cost
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_CASTING_POWER_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_MAGIC_CASTING_SPEED
	{UPGRADE_OPTION 
		(potions/potion_blue_big) 
		(Magic: Casting Speed, Current level: $current_unit.variables.abilities.magic_casting.speed|)
		(Add 1 to magic strikes, +1 casting time per simple action. 
Required: $magic_speed_cost| Mind)
		($magic_speed_cost|)
		({UPGRADE_MAGIC_CASTING_SPEED_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.magic_casting.speed
			greater_than=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$magic_speed_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=$magic_speed_cost
				[/variable]
			[/or]
		[/and])
		({UPGRADE_MAGIC_CASTING_SPEED_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_HAMMER_FOCUS
	{UPGRADE_OPTION 
		(attacks/hammer-dwarven-runic) 
		(Magic: Martial Focus, Current level: $current_unit.variables.abilities.magic_casting.focus|)
		(If caster's primary weapon is a hammer or runic hammer,
reduce effect of armor penalty on Runic Magic by 3%/level
Required: $magic_focus_cost| Body, $magic_focus_cost| Mind)
		($magic_focus_cost|)
		({UPGRADE_HAMMER_FOCUS_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.runic_magic
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$magic_focus_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=$magic_focus_cost
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=$magic_focus_cost
					[/variable]
				[/or]
			[/or]
		[/and])
		({UPGRADE_HAMMER_FOCUS_EFFECT current_unit})
	}
#enddef

#define MENU_UPGRADE_SWORD_FOCUS
	{UPGRADE_OPTION 
		(icons/sword-faerie) 
		(Magic: Martial Focus, Current level: $current_unit.variables.abilities.magic_casting.focus|)
		(If caster's primary weapon is a sword - light or heavy,
reduce effect of armor penalty on Faerie Magic by 3%/level
Required: $magic_focus_cost| Body, $magic_focus_cost| Mind)
		($magic_focus_cost|)
		({UPGRADE_SWORD_FOCUS_CONDITION current_unit})
		([variable]
			name=current_unit.variables.abilities.faerie_magic
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.talentpoints
				less_than=$magic_focus_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.mind
					less_than=$magic_focus_cost
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.body
						less_than=$magic_focus_cost
					[/variable]
				[/or]
			[/or]
		[/and])
		({UPGRADE_SWORD_FOCUS_EFFECT current_unit})
	}
#enddef

#define MENU_ABILITY_THUNDERSTICK_TINKER
	{UPGRADE_OPTION 
		(attacks/thunderstick) 
		(Skill: Thunderstick Tinker, Current level: $current_unit.variables.abilities.thunderstick_tinker|)
		(Improve an existing thunderstick
Required: $ts_tinker_cost| Mind)
		($ts_tinker_cost|)
		({UPGRADE_THUNDERSTICK_TINKER_CONDITION current_unit})
		([variable]
			name=current_unit.variables.inventory.type.thunderstick
			greater_than_equal_to=1
		[/variable]
		[variable]
			name=current_unit.variables.abilities.thunderstick_tinker
			greater_than=-1
		[/variable]
		[and]
			[variable]
				name=current_unit.variables.mind
				less_than=$ts_tinker_cost
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.talentpoints
					less_than=$ts_tinker_cost
				[/variable]
			[/or]
		[/and])
		({UPGRADE_THUNDERSTICK_TINKER_EFFECT current_unit})
	}
#enddef

#command and menu

#define LEVELUP_MENU
    [store_unit]
        variable=current_unit
        [filter]
            canrecruit=yes
            side=$side_number
        [/filter]
        kill=no
    [/store_unit]

    [store_unit]
        variable=cancel_current_unit
        [filter]
            canrecruit=yes
            side=$side_number
        [/filter]
        kill=no
    [/store_unit]

	{VARIABLE unit_path current_unit}
    {VARIABLE upgrading 1}
    [while]
        [variable]
            name=upgrading
            numerical_equals=1
        [/variable]
        [do]
			# upgrade costs and rates
            {UPGRADE_COSTS_RECURRING current_unit}
			{CONSTRUCT_UNIT}
            [message]
                speaker=narrator
                message= _ "You have $current_unit.variables.talentpoints| Talent Points."

                [option]
			        message ="&"+check.png+"="+_ "(End)"
			        [command]
			            {VARIABLE upgrading 0}
			        [/command]
			    [/option]
                [option]
			        message ="&"+x.png+"="+_ "(Cancel Changes)"
			        [command]
			            {VARIABLE upgrading 0}
			            [unstore_unit]
			                variable=cancel_current_unit
			            [/unstore_unit]
			        [/command]
			    [/option]
                {MENU_UPGRADE_BODY}
                {MENU_UPGRADE_DEFT}
                {MENU_UPGRADE_MIND}
                {MENU_UPGRADE_HIT_POINTS}
                {MENU_UPGRADE_EVADE}
                {MENU_ABILITY_REGEN}
                {MENU_UPGRADE_MOVES}
                {MENU_UPGRADE_WEAPON_GIFT ("club-small") ("bludgeon weapons") ("Bludgeon") ("bludgeon") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("dagger-human") ("light blades") ("Light Blade") ("light_blade") ("deft") ("deft") ("body")}
                {MENU_UPGRADE_WEAPON_GIFT ("sword-human") ("heavy blades") ("Heavy Blade") ("heavy_blade") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("spear") ("polearms") ("Polearm") ("polearm") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("rock_thrown") ("lobbed weapons") ("Lob") ("lob") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("dagger-thrown-human") ("thrown light blades") ("Thrown Light Blade") ("thrown_light_blade") ("deft") ("deft") ("body")}
                {MENU_UPGRADE_WEAPON_GIFT ("bow") ("bows") ("Bow") ("bow") ("deft") ("deft") ("body")}
                {MENU_UPGRADE_WEAPON_GIFT ("hatchet") ("thrown heavy blades") ("Thrown Heavy Blades") ("thrown_heavy_blade") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("javelin-human") ("javelins") ("Javelin") ("javelin") ("body") ("body") ("deft")}
                {MENU_UPGRADE_WEAPON_GIFT ("crossbow-human") ("crossbows") ("Crossbow") ("crossbow") ("deft") ("body") ("deft")}

                {MENU_ABILITY_DUAL_WIELD}
                {MENU_ABILITY_TRIPLE_WIELD}
                {MENU_ABILITY_RPG_LEADERSHIP_1}
                {MENU_ABILITY_RPG_LEADERSHIP_2}
                {MENU_ABILITY_RPG_LEADERSHIP_3}
                {MENU_ABILITY_RPG_LEADERSHIP_4}
				{MENU_ABILITY_RPG_CRUELTY}
                {MENU_ABILITY_RPG_LONER}
                {MENU_ABILITY_RPG_RANGER}
                {MENU_ABILITY_RPG_SURVIVALIST}
                {MENU_ABILITY_RPG_TRAILBLAZER}
                {MENU_ABILITY_RPG_AMBUSH_FOREST}
                {MENU_ABILITY_RPG_TRAILBLAZER_ELF}
                {MENU_ABILITY_RPG_AMBUSH_MOUNTAINS}
                {MENU_ABILITY_RPG_HEALTHY}
                {MENU_ABILITY_RPG_FEARLESS}
				{MENU_ABILITY_SKIRMISHER}
				{MENU_ABILITY_DISTRACT}
                {MENU_ABILITY_DASH}
				{MENU_ABILITY_GRACE}
                {MENU_ABILITY_FIRSTSTRIKE}
                {MENU_ABILITY_BLOODLUST_1}
				{MENU_ABILITY_BLOODLUST_2}
				{MENU_ABILITY_BLOODLUST_3}
                {MENU_ABILITY_RAGE}
                {MENU_ABILITY_BERSERK}
                {MENU_ABILITY_STEADFAST_1}
				{MENU_ABILITY_STEADFAST_2}
				{MENU_ABILITY_STEADFAST_3}
                {MENU_ABILITY_BACKSTAB_1}
				{MENU_ABILITY_BACKSTAB_2}
				{MENU_ABILITY_BACKSTAB_3}
				{MENU_ABILITY_TARGET_1}
				{MENU_ABILITY_TARGET_2}
				{MENU_ABILITY_TARGET_3}
				{MENU_ABILITY_SLASHDASH_1}
				{MENU_ABILITY_SLASHDASH_2}
				{MENU_ABILITY_SLASHDASH_3}
				{MENU_ABILITY_RIPOSTE_1}
				{MENU_ABILITY_RIPOSTE_2}
				{MENU_ABILITY_RIPOSTE_3}
				{MENU_ABILITY_ENSNARE_1}
				{MENU_ABILITY_ENSNARE_2}
				{MENU_ABILITY_ENSNARE_3}
				{MENU_ABILITY_POINTPIKE_1}
				{MENU_ABILITY_POINTPIKE_2}
				{MENU_ABILITY_POINTPIKE_3}
				{MENU_ABILITY_STORM_1}
				{MENU_ABILITY_STORM_2}
				{MENU_ABILITY_STORM_3}
				{MENU_ABILITY_BRUTAL_ASSAULT}
				{MENU_ABILITY_CLEAVE_1}
				{MENU_ABILITY_CLEAVE_2}
				{MENU_ABILITY_CLEAVE_3}
                {MENU_ABILITY_MARKSMAN_1}
				{MENU_ABILITY_MARKSMAN_2}
				{MENU_ABILITY_MARKSMAN_3}
				{MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_1}
				{MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_2}
				{MENU_ABILITY_MARKSMAN_THROWN_LIGHT_BLADE_3}
				{MENU_ABILITY_AMMO_BOW_1}
				{MENU_ABILITY_AMMO_BOW_2}
				{MENU_ABILITY_AMMO_BOW_3}
				{MENU_ABILITY_AMMO_JAVELIN_1}
				{MENU_ABILITY_AMMO_JAVELIN_2}
				{MENU_ABILITY_AMMO_JAVELIN_3}
				{MENU_ABILITY_AMMO_THROWN_LIGHT_1}
				{MENU_ABILITY_AMMO_THROWN_LIGHT_2}
				{MENU_ABILITY_AMMO_THROWN_LIGHT_3}
				{MENU_ABILITY_AMMO_THROWN_HEAVY_1}
				{MENU_ABILITY_AMMO_THROWN_HEAVY_2}
				{MENU_ABILITY_AMMO_THROWN_HEAVY_3}
				{MENU_ABILITY_GOLIATH_BANE_1}
				{MENU_ABILITY_GOLIATH_BANE_2}
				{MENU_ABILITY_GOLIATH_BANE_3}
				{MENU_ABILITY_FIRE_SHOT_BOW}
				{MENU_ABILITY_FIRE_SHOT_XBOW}
				{MENU_ABILITY_READIED_BOLT}
				{MENU_ABILITY_THUNDERSTICK_TINKER}
                {MENU_ABILITY_SNEAK}                
                {MENU_ABILITY_MAGIC_TROLL}
                {MENU_ABILITY_MAGIC_FAERIE}
				{MENU_ABLITY_FAERIE_TOUCH}
				{MENU_ABLITY_ELDRITCH_TOUCH}
				{MENU_ABILITY_MAGIC_WOOD}
				{MENU_ABILITY_NATURE_HEAL}
				{MENU_ABILITY_BRAMBLES}
				{MENU_ABILITY_VINE_ENSNARE_1}
				{MENU_ABILITY_VINE_ENSNARE_2}
				{MENU_ABILITY_VINE_ENSNARE_3}
				{MENU_ABILITY_VINE_SLOWS}
				{MENU_ABILITY_FAERIE_FORM}
                {MENU_ABILITY_MAGIC_RUNIC}
                {MENU_ABILITY_MAGIC_INITIATE}
                {MENU_ABILITY_MAGIC_DARK}
				{MENU_ABILITY_MAGIC_DARK_INITIATE}
                {MENU_ABILITY_MAGIC_RED}
                {MENU_ABILITY_MAGIC_WHITE}
                {MENU_ABILITY_MAGIC_SILVER}
                {MENU_ABILITY_MAGIC_ELDER}
				{MENU_ABILITY_MAGIC_SWAMP}
				{MENU_ABILITY_MAGIC_TRIBAL}
				{MENU_ABILITY_MAGIC_BENEVOLENT}
				{MENU_ABILITY_MAGIC_BALEFUL}
                {MENU_UPGRADE_MAGIC_CASTING_POWER}
                {MENU_UPGRADE_MAGIC_CASTING_SPEED}
				{MENU_UPGRADE_HAMMER_FOCUS}
				{MENU_UPGRADE_SWORD_FOCUS}
                {MENU_ABILITY_MAGIC_WHITE_ILLUMINATES}
                {MENU_ABILITY_MAGIC_DARK_PLAGUE}
				{MENU_ABILITY_MAGIC_DARK_SOULTRAP}
                {MENU_ABILITY_MAGIC_WHITE_METAL_TO_ARCANE}
                {MENU_ABILITY_POISON_THROWN_LIGHT_BLADE}
				{MENU_ABILITY_POISON_THROWN_LIGHT_BLADE_ORC}
                image=wesnoth-icon.png
            [/message]
        [/do]
    [/while]
	{CLEAR_VARIABLE current_unit,cancel_current_unit,unit_path,upgrading}
#enddef
