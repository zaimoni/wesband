#prob_list use macros
#create a new prob_list from two comma-separated lists, one of item names and one of probability weights
#define PROB_LIST P_LIST ITEMS PROBS
	[prob_list]
		name={P_LIST}
		items={ITEMS}
		weights={PROBS}
	[/prob_list]
#enddef
#macro to modify a prob_list.  available ops are: set (set an item's prob to a number, remove from list if number = 0, or add to list if not already present),
#add (increase an item's prob by a number, or add to list if not already present), and
#subtract (decrease an item's prob by a number, or remove from list if prob <= number)
#percent (set an item's prob to its current prob multiplied by the percent given - that is, 50 halves, 100 no change, 200 doubles, etc) rounds result up, removes if less than or equal to 0
#define PROB_LIST_OP P_OP P_LIST ITEM PROB
	{VARIABLE prob_args.op {P_OP}}
	[if]
		[variable]
			name=prob_args.op
			equals=percent
		[/variable]
		[then]
			{VARIABLE prob_args.op scale}
		[/then]
	[/if]
	{WML_MSG "op is $prob_args.op"}
	[set_prob]
		name={P_LIST}
		op=$prob_args.op
		item={ITEM}
		weight={PROB}
	[/set_prob]
	{CLEAR_VARIABLE prob_args}
#enddef
#this is just an easy way of saying PROB_LIST_OP set P_LIST ITEM 0
#define PROB_LIST_CLEAR P_LIST ITEM
	[set_prob]
		name={P_LIST}
		op=clear
		item={ITEM}
	[/set_prob]
#enddef
#macro to retrieve information from a prob_list and store it in VAR
#can put random for ITEM to get a random item with probability determined by their prob weights,
#<item name> to retrieve probability of that item
#define PROB_LIST_GET P_LIST ITEM VAR
	{VARIABLE prob_args.item {ITEM}}
	[if]
		[variable]
			name=prob_args.item
			equals=random
		[/variable]
		[then]
			[get_prob]
				name={P_LIST}
				op=rand
				variable={VAR}
			[/get_prob]
		[/then]
		[else]
			[get_prob]
				name={P_LIST}
				op=weight
				item={ITEM}
				variable={VAR}
			[/get_prob]
		[/else]
	[/if]
	{CLEAR_VARIABLE prob_args}
#enddef
#this is just an easy way of saying PROB_LIST_GET P_LIST random random
#define PROB_LIST_RANDOM P_LIST
	[get_prob]
		name={P_LIST}
		op=rand
		variable=random
	[/get_prob]
#enddef

#define PROB_LIST_UNION DEST SOURCE
	[set_prob]
		name={DEST}
		op=union
		with_list={SOURCE}
	[/set_prob]
#enddef

#define PROB_LIST_DIFF DEST SOURCE
	[set_prob]
		name={DEST}
		op=diff
		with_list={SOURCE}
	[/set_prob]
#enddef

#item creation use macros
#create a weapon of  type TYPE, rank RANK, and attribute ATTR, and store in VAR
#ATTR can be random
#define CREATE_WEAPON TYPE RANK ATTR VAR
	[create_weapon]
		type={TYPE}
		rank={RANK}
		attribute={ATTR}
		variable={VAR}
	[/create_weapon]
#enddef
#create a random weapon of rank RANK and attribute ATTR from a prob_list, and store in VAR
#ATTR can be random
#define RANDOM_WEAPON P_LIST RANK ATTR VAR
	{PROB_LIST_GET {P_LIST} random item_args.type}
	[create_weapon]
		type=$item_args.type
		rank={RANK}
		attribute={ATTR}
		variable={VAR}
	[/create_weapon]
	{CLEAR_VARIABLE item_args}
#enddef
#as the above two macros, but for armor
#define CREATE_ARMOR TYPE RANK ATTR VAR
	[create_armor]
		type={TYPE}
		rank={RANK}
		attribute={ATTR}
		variable={VAR}
	[/create_armor]
#enddef
#define RANDOM_ARMOR P_LIST RANK ATTR VAR
	{PROB_LIST_GET {P_LIST} random item_args.type}
	[create_armor]
		type=$item_args.type
		rank={RANK}
		attribute={ATTR}
		variable={VAR}
	[/create_armor]
	{CLEAR_VARIABLE item_args}
#enddef
#as above, but for potions
#define CREATE_POTION TYPE RANK VAR
	{VARIABLE item_args.type {TYPE}}
	{VARIABLE item_args.rank {RANK}}
	{VARIABLE item_args.result {VAR}}
	[fire_event]
		name=create_potion
	[/fire_event]
	{CLEAR_VARIABLE item_args}
#enddef
#define RANDOM_POTION P_LIST RANK VAR
	{PROB_LIST_GET {P_LIST} random item_args.type}
	{VARIABLE item_args.rank {RANK}}
	{VARIABLE item_args.result {VAR}}
	[fire_event]
		name=create_potion
	[/fire_event]
	{CLEAR_VARIABLE item_args}
#enddef
#as above, but for scrolls
#define CREATE_SCROLL TYPE RANK VAR
	{VARIABLE item_args.type {TYPE}}
	{VARIABLE item_args.rank {RANK}}
	{VARIABLE item_args.result {VAR}}
	[fire_event]
		name=create_scroll
	[/fire_event]
	{CLEAR_VARIABLE item_args}
#enddef
#define RANDOM_SCROLL P_LIST RANK VAR
	{PROB_LIST_GET {P_LIST} random item_args.type}
	{VARIABLE item_args.rank {RANK}}
	{VARIABLE item_args.result {VAR}}
	[fire_event]
		name=create_scroll
	[/fire_event]
	{CLEAR_VARIABLE item_args}
#enddef