#define EXPEND_SIMPLE_ACTION UNIT
	[if]
		[variable]
			name={UNIT}.variables.simple_action
			greater_than=0
		[/variable]
		[then]
			{VARIABLE {UNIT}.variables.simple_action 0}
		[/then]
		[else]
			{VARIABLE {UNIT}.attacks_left 0}
		[/else]
	[/if]
#enddef

#define EXPEND_COMPLEX_ACTION UNIT
	{VARIABLE {UNIT}.attacks_left 0}
#enddef

#define COMPLEX_ACTION_EVENT COMPLEX_ACTION_NAME COMPLEX_ACTION_EFFECT SETUP
	[event]
		name={COMPLEX_ACTION_NAME}
		first_time_only=no
		{{SETUP}}
		[if]
			[variable]
				name=current_unit.attacks_left
				numerical_equals=0
			[/variable]
			[or]
				[variable]
					name=current_unit.variables.blocked_attacks
					numerical_equals=1
				[/variable]
			[/or]
			[then]
				[message]
                    speaker=narrator
                    message=_ "You do not have enough actions left to do this."
                    side_for=$current_unit.side
                [/message]
			[/then]
			[else]	
				{{COMPLEX_ACTION_EFFECT}}
				[if]
					[variable]
						name=current_unit.variables.complete_action
						numerical_equals=1
					[/variable]
					[then]
						{EXPEND_COMPLEX_ACTION current_unit}
						{CLEAR_VARIABLE current_unit.variables.complete_action}
						[unstore_unit]
							variable=current_unit
						[/unstore_unit]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define SIMPLE_ACTION_EVENT SIMPLE_ACTION_NAME SIMPLE_ACTION_EFFECT SETUP
	[event]
		name={SIMPLE_ACTION_NAME}
		first_time_only=no
		{{SETUP}}
		[if]
			[variable]
				name=current_unit.variables.simple_action
				numerical_equals=0
			[/variable]
			[and]
				[variable]
					name=current_unit.attacks_left
					numerical_equals=0
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.blocked_attacks
						numerical_equals=1
					[/variable]
				[/or]
			[/and]
			[then]
				[message]
                    speaker=narrator
                    message=_ "You do not have enough actions left to do this."
                    side_for=$current_unit.side
                [/message]
			[/then]
			[else]	
				{{SIMPLE_ACTION_EFFECT}}
				[if]
					[variable]
						name=current_unit.variables.complete_action
						numerical_equals=1
					[/variable]
					[then]
						{EXPEND_SIMPLE_ACTION current_unit}
						{CLEAR_VARIABLE current_unit.variables.complete_action}
						[unstore_unit]
							variable=current_unit
						[/unstore_unit]
					[/then]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define EXPEND_CASTING_ACTION UNIT
	[if]
		[variable]
			name={UNIT}.variables.casting_actions
			less_than=$cast_time
		[/variable]
		[then]
			{EXPEND_SIMPLE_ACTION {UNIT}}
			{VARIABLE_OP {UNIT}.variables.casting_actions add ${UNIT}.variables.abilities.magic_casting.speed}
		[/then]
	[/if]
	{VARIABLE_OP {UNIT}.variables.casting_actions sub $cast_time}
	[if]
		[variable]
			name={UNIT}.variables.casting_actions
			less_than=0
		[/variable]
		[then]
			#for display purposes
			{VARIABLE {UNIT}.variables.casting_actions 0}
		[/then]
	[/if]
	{VARIABLE_OP {UNIT}.variables.abilities.magic_casting.mana sub $mana_cost}
	{VARIABLE {UNIT}.modifications.trait[0].name "mana: ${UNIT}.variables.abilities.magic_casting.mana|/${UNIT}.variables.abilities.magic_casting.max_mana|"}
#enddef

#define CASTING_ACTION_EVENT CASTING_ACTION_NAME CASTING_ACTION_EFFECT SETUP
	[event]
		name={CASTING_ACTION_NAME}
		first_time_only=no
		#setup must set cast_time and mana_cost variables
		{{SETUP}}
		[if]
			[variable]
				name=current_unit.variables.simple_action
				numerical_equals=0
			[/variable]
			[and]
				[variable]
					name=current_unit.attacks_left
					numerical_equals=0
				[/variable]
				[or]
					[variable]
						name=current_unit.variables.blocked_attacks
						numerical_equals=1
					[/variable]
				[/or]
			[/and]
			[and]
				[variable]
					name=current_unit.variables.casting_actions
					less_than=$cast_time
				[/variable]
			[/and]
			[then]
				[message]
                    speaker=narrator
                    message=_ "You do not have enough actions left to cast this."
                    side_for=$current_unit.side
                [/message]
			[/then]
			[else]
				[if]
					[variable]
						name=current_unit.variables.abilities.magic_casting.mana
						less_than=$mana_cost
					[/variable]
					[then]
						[message]
                            speaker=narrator
                            message=_ "You do not have enough mana left to cast this."
                            side_for=$current_unit.side
                        [/message]
					[/then]
					[else]
						{{CASTING_ACTION_EFFECT}}
						[if]
							[variable]
								name=current_unit.variables.complete_action
								numerical_equals=1
							[/variable]
							[then]
								{EXPEND_CASTING_ACTION current_unit}
								{CLEAR_VARIABLE current_unit.variables.complete_action}
								[unstore_unit]
									variable=current_unit
								[/unstore_unit]
							[/then]
						[/if]
					[/else]
				[/if]
			[/else]
		[/if]
	[/event]
#enddef

#define CONFIRM_ACTION UNIT
	{VARIABLE {UNIT}.variables.complete_action 1}
#enddef

#define CANCEL_ACTION UNIT
	{VARIABLE {UNIT}.variables.complete_action 0}
#enddef

#define WITH_TARGETED_EVENT ACTION_TYPE TARGETED_EVENT SELF_EFFECT DISPLAY
	[store_unit]
		[filter]
			x,y=$target_x,$target_y
		[/filter]
		variable=target_unit 
	[/store_unit]
	[fire_event]
		name={TARGETED_EVENT}
	[/fire_event]
	[if]
		[variable]
			name=target_x
			numerical_equals=$acting_x
		[/variable]
		[and]
			[variable]
				name=target_y
				numerical_equals=$acting_y
			[/variable]
		[/and]
		[then]
			{EXPEND_{ACTION_TYPE}_ACTION target_unit}
			{{SELF_EFFECT} target_unit}
			{CANCEL_ACTION current_unit}
		[/then]
		[else]
			{{SELF_EFFECT} current_unit}
			{CONFIRM_ACTION current_unit}
		[/else]
	[/if]
	[unstore_unit]
		variable=target_unit
		{{DISPLAY}}
	[/unstore_unit]
#enddef

#define EXPEND_CONSUMABLE CONSUMABLE
	[if]
		[variable]
			name={CONSUMABLE}.uses
			greater_than=0
		[/variable]
		[then]
			{VARIABLE_OP {CONSUMABLE}.uses sub 1}
			[if]
				[variable]
					name={CONSUMABLE}.uses
					numerical_equals=0
				[/variable]
				[then]
					{CLEAR_VARIABLE {CONSUMABLE}}
				[/then]
			[/if]
		[/then]
	[/if]
#enddef