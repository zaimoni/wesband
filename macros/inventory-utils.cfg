#define WBD_DISPLAY_WEAPON PATH A_DAM A_NUM
message="&"+attacks/${PATH}.icon|.png+"="+_ "${PATH}.description|
<small><small>Class: ${PATH}.class_description|${PATH}.evade_description|</small></small>
<small>Base: (${PATH}.damage|-${PATH}.number|), Adjusted: ({A_DAM}-{A_NUM}) ${PATH}.type|
<small>${PATH}.special|</small></small>"#enddef

#define WBD_FOR_DROPPABLE UNIT CATEGORY EFFECT
	{VARIABLE i_cat {CATEGORY}}
	{FOREACH {UNIT}.variables.inventory.{CATEGORY} i}
		[if]
			[not]
				[variable]
					name={UNIT}.variables.inventory.{CATEGORY}[$i].undroppable
					equals=1
				[/variable]
				[or]
					[variable]
						name=i_cat
						equals=weapons.melee
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.melee_1
							equals=$i
						[/variable]
						[or]
							[variable]
								name={UNIT}.variables.equipment_slots.melee_2
								equals=$i
							[/variable]
						[/or]
						[or]
							[variable]
								name={UNIT}.variables.equipment_slots.melee_3
								equals=$i
							[/variable]
						[/or]
					[/and]
				[/or]
				[or]
					[variable]
						name=i_cat
						equals=weapons.ranged
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.ranged
							equals=$i
						[/variable]
					[/and]
				[/or]
				[or]
					[variable]
						name=i_cat
						equals=armor.shield
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.shield
							equals=$i
						[/variable]
					[/and]
				[/or]
				[or]
					[variable]
						name=i_cat
						equals=armor.head
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.head_armor
							equals=$i
						[/variable]
					[/and]
				[/or]
				[or]
					[variable]
						name=i_cat
						equals=armor.torso
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.torso_armor
							equals=$i
						[/variable]
					[/and]
				[/or]
				[or]
					[variable]
						name=i_cat
						equals=armor.legs
					[/variable]
					[and]
						[variable]
							name={UNIT}.variables.equipment_slots.leg_armor
							equals=$i
						[/variable]
					[/and]
				[/or]
			[/not]
			[then]
				{EFFECT}
			[/then]
		[/if]
	{NEXT i}
	{CLEAR_VARIABLE i_cat}
#enddef

#define WBD_INVENTORY_CANCEL_STACK_POP
	{FIRE_EVENT "wbd inventory cancel stack pop"}
#enddef

#define WBD_INVENTORY_CANCEL_STACK_PUSH ACTION_TYPE
	{FIRE_EVENT "wbd inventory cancel stack push"}
	{VARIABLE current.undo_type {ACTION_TYPE}}
#enddef

#define WBD_PAPERDOLL_CALCS
	[if]
		[variable]
			name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.head
			greater_than=0
		[/variable]
		[then]
			{VARIABLE current.unit.variables.equipment_slots.head_armor 0}
		[/then]
	[/if]
	[if]
		[variable]
			name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.legs
			greater_than=0
		[/variable]
		[then]
			{VARIABLE current.unit.variables.equipment_slots.leg_armor 0}
		[/then]
	[/if]
	[if]
		[variable]
			name=current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].restricts.shield
			greater_than=0
		[/variable]
		[then]
			{VARIABLE current.unit.variables.equipment_slots.shield 0}
		[/then]
	[/if]
	[construct_unit]
		variable=current.unit
	[/construct_unit]

	{VARIABLE paperdoll.arcane "$(100-0$current.unit.variables.resistance.arcane)"}
	{VARIABLE paperdoll.blade "$(100-0$current.unit.variables.resistance.blade)"}
	{VARIABLE paperdoll.cold "$(100-0$current.unit.variables.resistance.cold)"}
	{VARIABLE paperdoll.fire "$(100-0$current.unit.variables.resistance.fire)"}
	{VARIABLE paperdoll.impact "$(100-0$current.unit.variables.resistance.impact)"}
	{VARIABLE paperdoll.pierce "$(100-0$current.unit.variables.resistance.pierce)"}

	{VARIABLE paperdoll.adjusted_arcane "$(100-0$current.unit.resistance.arcane)"}
	{VARIABLE paperdoll.adjusted_blade "$(100-0$current.unit.resistance.blade)"}
	{VARIABLE paperdoll.adjusted_cold "$(100-0$current.unit.resistance.cold)"}
	{VARIABLE paperdoll.adjusted_fire "$(100-0$current.unit.resistance.fire)"}
	{VARIABLE paperdoll.adjusted_impact "$(100-0$current.unit.resistance.impact)"}
	{VARIABLE paperdoll.adjusted_pierce "$(100-0$current.unit.resistance.pierce)"}

	{VARIABLE paperdoll.evade "$(3*0$current.unit.variables.evade_level)"}
	{VARIABLE paperdoll.adjusted_evade "$($paperdoll.evade|+$current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].evade_adjust|+$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].evade_adjust|+$current.unit.variables.inventory.armor.head[$current.unit.variables.equipment_slots.head_armor|].evade_adjust|+$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].evade_adjust|+$current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_1|].evade_adjust|)"}
	{IF_VAR current.unit.variables.abilities.wield greater_than 0 (
		[then]
			{VARIABLE_OP paperdoll.adjusted_evade add $current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_2|].evade_adjust}
			{IF_VAR current.unit.variables.abilities.wield greater_than 1 (
				[then]
					{VARIABLE_OP paperdoll.adjusted_evade add $current.unit.variables.inventory.weapons.melee[$current.unit.variables.equipment_slots.melee_3|].evade_adjust}
				[/then]
			)}
		[/then]
	)}

	{VARIABLE paperdoll.armor_magic_adjust "$($current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].magic_adjust|+$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].magic_adjust|+$current.unit.variables.inventory.armor.head[$current.unit.variables.equipment_slots.head_armor|].magic_adjust|+$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].magic_adjust|)"}
	[if]
		[variable]
			name=current.unit.race
			equals="dwarf"
		[/variable]
		[then]
			{VARIABLE_OP paperdoll.armor_magic_adjust divide 2}
			{IF_VAR current.unit.attack[0].user_name equals "hammer" (
				[then]
					{VARIABLE paperdoll.adjusted_armor_magic "$(3*0$current.unit.variables.abilities.magic_casting.focus+0$paperdoll.armor_magic_adjust)"}
				[/then]
				[else]
					{VARIABLE paperdoll.adjusted_armor_magic $paperdoll.armor_magic_adjust}
				[/else]
			)}
		[/then]
		[else]
			{IF_VAR current.unit.attack[0].name equals "sword" (
				[then]
					{VARIABLE paperdoll.adjusted_armor_magic "$(3*0$current.unit.variables.abilities.magic_casting.focus+0$paperdoll.armor_magic_adjust)"}
				[/then]
				[else]
					{VARIABLE paperdoll.adjusted_armor_magic $paperdoll.armor_magic_adjust}
				[/else]
			)}
		[/else]
	[/if]
	[if]
		[variable]
			name=paperdoll.adjusted_armor_magic
			greater_than=0
		[/variable]
		[then]
			{VARIABLE paperdoll.adjusted_armor_magic 0}
		[/then]
	[/if]
	{VARIABLE paperdoll.def_adjust "$(0$current.unit.variables.inventory.armor.torso[$current.unit.variables.equipment_slots.torso_armor|].terrain.flat.defense+$current.unit.variables.inventory.armor.legs[$current.unit.variables.equipment_slots.leg_armor|].terrain.flat.defense)"}
	{VARIABLE_OP paperdoll.def_adjust multiply -1}
	{VARIABLE paperdoll.def_adjust_shield "$(0$paperdoll.def_adjust+0$current.unit.variables.inventory.armor.shield[$current.unit.variables.equipment_slots.shield|].terrain_recoup)"}
	[if]
		[variable]
			name=paperdoll.def_adjust_shield
			greater_than=0
		[/variable]
		[then]
			{VARIABLE paperdoll.def_adjust_shield 0}
		[/then]
	[/if]
	{VARIABLE paperdoll.armor_ranged_adjust "$($ranged_adjust-100)"}
	{VARIABLE paperdoll.move_lost "$($current.unit.variables.max_moves|-$current.unit.max_moves|)"}
	{VARIABLE paperdoll.move_loss_rate "$(100/0$current.unit.variables.max_moves)"}
#enddef

#define WBD_DISPLAY_PAPERDOLL
message= _ "<small>Resistances: Adjusted (Natural)
Blade: $paperdoll.adjusted_blade| ($paperdoll.blade|)   Arcane: $paperdoll.adjusted_arcane| ($paperdoll.arcane|)
Impact: $paperdoll.adjusted_impact| ($paperdoll.impact|)  Cold: $paperdoll.adjusted_cold| ($paperdoll.cold|)
Pierce: $paperdoll.adjusted_pierce| ($paperdoll.pierce|)  Fire: $paperdoll.adjusted_fire| ($paperdoll.fire|)

Evade: $paperdoll.adjusted_evade| ($paperdoll.evade|)
Terrain Defense Adjust: $paperdoll.def_adjust (After Shield: $paperdoll.def_adjust_shield|)
Movement Lost: $paperdoll.move_lost (Loss rate: evade penalty/$paperdoll.move_loss_rate| rounded up)
Magic Armor Penalty: $paperdoll.armor_magic_adjust|% (After Focus: $paperdoll.adjusted_armor_magic|%)
Ranged Armor Penalty: $paperdoll.armor_ranged_adjust|%</small>"#enddef

#define WBD_COMMAND_MANAGE_INVENTORY
	[set_menu_item]
		id=c_manage_inventory
		image=commands/inventory.png
		description=_ "Manage Inventory"
		[filter_location]
			[filter]
				side=$side_number
				[and]
					canrecruit=yes
					[or]
						[not]
							race=undead
						[/not]
					[/or]
					[or]
						[filter_wml]
							corpse_type=skel
						[/filter_wml]
					[/or]
					[or]
						[filter_wml]
							[variables]
								[abilities]
									skeletal=1
								[/abilities]
							[/variables]
						[/filter_wml]
					[/or]
				[/and]
			[/filter]
        [/filter_location]

		[command]
			[set_variables]
				name=menu.location
				mode=replace
				[value]
					x=$x1
					y=$y1
				[/value]
			[/set_variables]
			[store_unit]
				variable=current.unit
				[filter]
					x=$menu.location.x
					y=$menu.location.y
				[/filter]
			[/store_unit]
			[store_unit]
				variable=current.adjacent
				[filter]
					side=$const.player_sides
					[filter_adjacent]
						id=$current.unit.id
					[/filter_adjacent]
					[not]
						type="WBD Unknown Adventurer"
					[/not]
					[and]
						canrecruit=yes
						[or]
							[not]
								race=undead
							[/not]
						[/or]
						[or]
							[filter_wml]
								corpse_type=skel
							[/filter_wml]
						[/or]
						[or]
							[filter_wml]
								[variables]
									[abilities]
										skeletal=1
									[/abilities]
								[/variables]
							[/filter_wml]
						[/or]
					[/and]
				[/filter]
			[/store_unit]
			{IF_VAR current.unit.canrecruit equals yes (
				[then]
					{VARIABLE menu.construct_type pc}
				[/then]
				[else]
					{VARIABLE menu.construct_type npc}
					[store_unit]
						variable=current.leader
						[filter]
							side=$side_number
							canrecruit=yes
						[/filter]
					[/store_unit]
				[/else]
			)}
			[set_variables]
				name=current.start_equip
				mode=replace
				[value]
					primary=$current.unit.variables.equipment_slots.melee_1
					secondary=$current.unit.variables.equipment_slots.melee_2
					tertiary=$current.unit.variables.equipment_slots.melee_3
					ranged=$current.unit.variables.equipment_slots.ranged
					shield=$current.unit.variables.equipment_slots.shield
					head=$current.unit.variables.equipment_slots.head_armor
					torso=$current.unit.variables.equipment_slots.torso_armor
					legs=$current.unit.variables.equipment_slots.leg_armor
				[/value]
			[/set_variables]
			{VARIABLE menu.actor 0}
			{VARIABLE_OP menu.actor string_length $current.unit.name}
			{IF_VAR menu.actor greater_than 0 (
				[then]
					{VARIABLE menu.actor $current.unit.name}
				[/then]
				[else]
					{VARIABLE menu.actor (_ "your minion")}
				[/else]
			)}
			{VARIABLE current.action.available "$(2*0$current.unit.attacks_left+0$current.unit.variables.simple_action)"}
			{VARIABLE current.action.expended 0}
			{VARIABLE menu.cancel_ptr 0}
			{VARIABLE current.undo_type "none"}
			[set_variables]
				name=current.ground
				mode=replace
				to_variable=ground.x$menu.location.x|.y$menu.location.y|.items
			[/set_variables]
			[set_variables]
				name=cancel
				mode=replace
				to_variable=current
			[/set_variables]
			{VARIABLE menu.level 0}
			[while]
				[variable]
					name=menu.level
					equals=0
				[/variable]
				[do]
					{VARIABLE menu.droppable 0}
					{WBD_FOR_DROPPABLE current.unit weapons.melee (
						{VARIABLE menu.droppable 1}
						{VARIABLE i $current.unit.variables.inventory.weapons.melee.length}
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit weapons.ranged (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.weapons.ranged.length}
							)}
						[/then]
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit armor.shield (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.armor.shield.length}
							)}
						[/then]
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit armor.head (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.armor.head.length}
							)}
						[/then]
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit armor.torso (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.armor.torso.length}
							)}
						[/then]
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit armor.legs (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.armor.legs.length}
							)}
						[/then]
					)}
					{IF_VAR menu.droppable equals 0 (
						[then]
							{WBD_FOR_DROPPABLE current.unit usables (
								{VARIABLE menu.droppable 1}
								{VARIABLE i $current.unit.variables.inventory.usables.length}
							)}
						[/then]
					)}
					{VARIABLE menu.tinkerable 0}
					{FOREACH current.unit.variables.inventory.weapons.ranged i}
						{IF_VAR current.unit.variables.inventory.weapons.ranged[$i].user_name equals thunderstick (
							[then]
								{VARIABLE menu.tinkerable 1}
								{VARIABLE i $current.unit.variables.inventory.weapons.ranged.length}
							[/then]
						)}
					{NEXT i}
					[message]
						speaker=narrator
						side_for=$side_number
						message=_ "Managing $menu.actor|'s inventory."
						[option]
							message="&"+check.png+"="+_ "(End - Confirm changes)"
							[show_if]
								[variable]
									name=current.undo_type
									not_equals="none"
								[/variable]
							[/show_if]
							[command]
								{IF_VAR current.action.expended greater_than 1 (
									[or]
										[variable]
											name=current.action.expended
											equals=1
										[/variable]
										[and]
											[variable]
												name=current.action.available
												equals=2
											[/variable]
										[/and]
									[/or]
									[then]
										[lua]
											code=<<
												local safety = checkSafety(menu.location.x, menu.location.y)
												if not safety then
													wesnoth.set_variable("current.unit.attacks_left", 0)
												end
											>>
										[/lua]
									[/then]
									[else]
										{IF_VAR current.action.expended equals 1 (
											[then]
												[lua]
													code=<<
														local safety = checkSafety(menu.location.x, menu.location.y)
														if not safety then
															wesnoth.set_variable("current.unit.variables.simple_action", 0)
														end
													>>
												[/lua]
											[/then]
										)}
									[/else]
								)}
								[construct_unit]
									variable=current.unit
								[/construct_unit]
					            {VARIABLE menu.level -1}
					        [/command]
						[/option]
						[option]
							message="&"+check.png+"="+_ "(End - No changes)"
							[show_if]
								[variable]
									name=current.undo_type
									equals="none"
								[/variable]
							[/show_if]
							[command]
					            {VARIABLE menu.level -1}
					        [/command]
						[/option]
						[option]
							message="&"+icons/equipment.png+"="+_ "Manage equipment"
							[show_if]
								[variable]
									name=current.action.available
									greater_than=1
								[/variable]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd manage equipment"}
							[/command]
						[/option]
						[option]
							message="&"+icons/equipment.png+"="+_ "View equipment"
							[show_if]
								[variable]
									name=current.action.available
									less_than=2
								[/variable]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd view equipment"}
							[/command]
						[/option]
						[option]
							message ="&"+attacks/thunderstick.png+"="+_ "Tinker: Thunderstick"
							[show_if]
								[variable]
									name=current.unit.variables.abilities.thunderstick_tinker
									greater_than=0
								[/variable]
								[and]
									[variable]
										name=menu.tinkerable
										equals=1
									[/variable]
								[/and]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd thunderstick tinker"}
							[/command]
						[/option]
						[option]
							message ="&"+icons/get-all.png+"="+_ "Get items"
							[show_if]
								[variable]
									name=ground.x$menu.location.x|.y$menu.location.y|.items.length
									greater_than=0
								[/variable]
								[and]
									[variable]
										name=current.action.available
										greater_than=0
									[/variable]
								[/and]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd get items"}
							[/command]
						[/option]
						[option]
							message ="&"+icons/item-give.png+"="+_ "Give items"
							[show_if]
								[variable]
									name=cancel[0].adjacent.length
									greater_than=0
								[/variable]
								[and]
									[variable]
										name=menu.droppable
										equals=1
									[/variable]
									[or]
										[variable]
											name=current.unit.variables.personal_gold
											greater_than=0
										[/variable]
									[/or]
								[/and]
								[and]
									[variable]
										name=current.action.available
										greater_than=0
									[/variable]
								[/and]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd give items"}
							[/command]
						[/option]
						[option]
							message ="&"+icons/item-drop.png+"="+_ "Drop items"
							[show_if]
								[variable]
									name=current.action.available
									greater_than=0
								[/variable]
								[and]
									[variable]
										name=menu.droppable
										equals=1
									[/variable]
									[or]
										[variable]
											name=current.unit.variables.personal_gold
											greater_than=0
										[/variable]
									[/or]
								[/and]
							[/show_if]
							[command]
								{FIRE_EVENT "wbd drop items"}
							[/command]
						[/option]
						[option]
							message="&"+x.png+"="+_ "(Undo $current.undo_type|)"
							[show_if]
								[variable]
									name=current.undo_type
									not_equals="none"
								[/variable]
							[/show_if]
							[command]
								{WBD_INVENTORY_CANCEL_STACK_POP}
							[/command]
						[/option]
						[option]
							message="&"+x.png+"="+_ "(End - cancel all changes)"
							[show_if]
								[variable]
									name=current.undo_type
									not_equals="none"
								[/variable]
							[/show_if]
							[command]
								{VARIABLE menu.cancel_ptr 0}
								{WBD_INVENTORY_CANCEL_STACK_POP}
					            {VARIABLE menu.level -1}
							[/command]
						[/option]
					[/message]
				[/do]
			[/while]
			{CLEAR_VARIABLE menu,unit_path,current,cancel,paperdoll}
		[/command]
	[/set_menu_item]
#enddef