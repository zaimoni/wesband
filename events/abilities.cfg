#update sneak after move
[event]
	name=moveto
	first_time_only=no
	[filter]
		# player side units handled with rousing to ensure compatibility
		side=$const.enemy_sides
		[filter_wml]
			[variables]
				stealthiness=1
			[/variables]
		[/filter_wml]
	[/filter]
	{CALCULATE_STEALTHINESS unit}
	[unstore_unit]
		variable=unit
	[/unstore_unit]
[/event]


 #farsight spell

#    [event]
#        name=side turn
#        first_time_only=no
#		[if]
#			[variable]
#				name=turn_number
#				greater_than=1
#			[/variable]
#			[then]
#				[store_unit]
#					variable=farsight_unit
#					[filter]
#						side=$side_number
#						canrecruit=yes
#					[/filter]
#				[/store_unit]
#				[if]
#					[variable]
#						name=farsight_unit.canrecruit
#						numerical_equals=1
#					[/variable]
#					[then]
#						{VARIABLE farsight_unit.max_moves $farsight_unit.variables.max_moves}
#					[/then]
#					[else]
#						{VARIABLE farsight_unit.max_moves $farsight_unit.temp_max_moves}
#					[/else]
#				[/if]
#				#farsight items might go here
#				[unstore_unit]
#					variable=farsight_unit
#				[/unstore_unit]
#				{CLEAR_VARIABLE farsight_unit}
#			[/then]
#		[/if]
#   [/event]

#    [event]
 #       name=turn refresh
#        first_time_only=no
#		[if]
#			[variable]
#				name=turn_number
#				greater_than=1
#			[/variable]
#			[then]
#				[store_unit]
#					variable=farsight_unit
#					[filter]
#						[filter_wml]
#							[variables]
#								[not]
#									farsight=0
#								[/not]
#							[/variables]
#						[/filter_wml]
#					[/filter]
#				[/store_unit]
#				[if]
#					[variable]
#						name=farsight_unit.variables.farsight
#						greater_than=0
#					[/variable]
#					[then]
#						{VARIABLE_OP farsight_unit.max_moves add $farsight_unit.variables.farsight}
#						{VARIABLE_OP farsight_unit.variables.farsight sub 1}
#					[/then]
#				[/if]
#				[unstore_unit]
#					variable=farsight_unit
#				[/unstore_unit]
#				{CLEAR_VARIABLE farsight_unit}
#			[/then]
#		[/if]
#   [/event]

#degrade damage of thundersticks if tinker level isn't good enough
[event]
	name=attack_end
	first_time_only=no

	[filter_attack]
		name=thunderstick
	[/filter_attack]
	{FOREACH unit.attack i}
		[if]
			[variable]
				name=unit.attack[$i].name
				equals="thunderstick"
			[/variable]
			[then]
				{VARIABLE current_id $i}
			[/then]
		[/if]
	{NEXT i}
	[if]
		[variable]
			name=unit.variables.inventory.weapons.ranged[$current_unit.variables.equipment_slots.ranged|].level
			greater_than=$unit.variables.abilities.thunderstick_tinker
		[/variable]
		[then]
			{VARIABLE_OP unit.attack[$current_id].damage multiply .8}
			{VARIABLE_OP unit.attack[$current_id].damage round 0}
			{VARIABLE unit.variables.inventory.weapons.ranged[$current_unit.variables.equipment_slots.ranged|].damage $unit.attack[$current_id].damage}
		[/then]
	[/if]
	[unstore_unit]
		variable=unit
	[/unstore_unit]
[/event]

#general attack number and attack hits storage, used for many specials
#find which don't need anymore, deleted special_attacker_misses
[event]
	name=attack
	first_time_only=no
	{VARIABLE specials_attacks 0}
	{VARIABLE specials_attacker_hits 0}
	{VARIABLE specials_defender_attacks 0}
	{VARIABLE specials_attacker_team $unit.team_name}
	{VARIABLE specials_exp_gained 0}
[/event]
[event]
	name=attacker_hits
	first_time_only=no
	{VARIABLE_OP specials_attacks add 1}
	{VARIABLE_OP specials_attacker_hits add 1}
[/event]
[event]
	name=attacker_misses
	first_time_only=no
	{VARIABLE_OP specials_attacks add 1}
[/event]
	
#slashdash
[event]
	name=attack_end
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[attack]
				slashdash=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].slashdash
			greater_than=0
		[/variable]
		[then]	
			[switch]
				variable=unit.variables.abilities.slashdash
				[case]
					value=1
					{VARIABLE temp_specials_attacker_hits $specials_attacker_hits}
					{VARIABLE_OP temp_specials_attacker_hits multiply .5}
					{VARIABLE_OP temp_specials_attacker_hits round "floor"}
					{VARIABLE_OP unit.moves add $temp_specials_attacker_hits}
				[/case]
				[case]
					value=2
					{VARIABLE_OP unit.moves add $specials_attacker_hits}
				[/case]
				[case]
					value=3
					{VARIABLE temp_specials_attacker_hits $specials_attacker_hits}
					{VARIABLE_OP temp_specials_attacker_hits multiply 2}
					{VARIABLE_OP unit.moves add $temp_specials_attacker_hits}
				[/case]
			[/switch]	
			[if]
				[variable]
					name=unit.moves
					greater_than=$unit.max_moves
				[/variable]
				[then]
					{VARIABLE unit.moves $unit.max_moves}
				[/then]
			[/if]
			[if]
				[variable]
					name=unit.variables.abilities.sneak
					numerical_equals=1
				[/variable]
				[and]
					[variable]
						name=unit.variables.stealthiness
						less_than=1
					[/variable]
				[/and]
				[then]
					{CALCULATE_STEALTHINESS unit}
				[/then]
			[/if]
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]

#riposte
[event]
	name=attacker_misses
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter_second]
		[filter_wml]
			[attack]
				riposte=1
			[/attack]
		[/filter_wml]
	[/filter_second]
	{VARIABLE second_unit.variables.right_of_way 1}
	[unstore_unit]
		variable=second_unit
	[/unstore_unit]
[/event]
#riposte events to reset value
[event]
	name=defender_hits,defender_misses,attack_end
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter_second]
		[filter_wml]
			[variables]
				right_of_way=1
			[/variables]
		[/filter_wml]
	[/filter_second]
	{VARIABLE second_unit.variables.right_of_way 0}
	[unstore_unit]
		variable=second_unit
	[/unstore_unit]
[/event]

#ensnare
[event]
	name=attacker_hits
	first_time_only=no
	[filter]
		[filter_wml]
			[attack]
				ensnare=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].ensnare
			greater_than=0
		[/variable]
		[then]
			[switch]
				variable=unit.variables.abilities.ensnare
				[case]
					value=1
					{VARIABLE_OP unit.attack[$second_weapon.attack_number].specials.chance_to_hit.add add 5}
				[/case]
				[case]
					value=2
					{VARIABLE_OP unit.attack[$second_weapon.attack_number].specials.chance_to_hit.add add 10}
				[/case]
				[case]
					value=3
					{VARIABLE_OP unit.attack[$second_weapon.attack_number].specials.chance_to_hit.add add 15}
				[/case]
			[/switch]	
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]
#reset value
[event]
	name=attack_end
	first_time_only=no
	[filter]
		[filter_wml]
			[attack]
				ensnare=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].ensnare
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=unit.attack[$second_weapon.attack_number].specials.chance_to_hit.add
				greater_than=0
			[/variable]
		[/and]
		[then]
			{VARIABLE unit.attack[$weapon.attack_number].specials.chance_to_hit.add 0}
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]

#point&pike
[event]
	name=attacker_misses
	first_time_only=no
	[filter]
		[filter_wml]
			[attack]
				pointpike=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].pointpike
			greater_than=0
		[/variable]
		[then]
			{VARIABLE_OP unit.variables.pointpike  add "$(10*$unit.variables.abilities.pointpike)"}
			[if]
				[variable]
					name=unit.variables.pointpike
					greater_than=100
				[/variable]
				[then]
					{VARIABLE unit.variables.pointpike 100}
				[/then]
			[/if]
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]
[event]
	name=attacker_hits
	first_time_only=no
	[filter]
		[filter_wml]
			[attack]
				pointpike=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].pointpike
			greater_than=0
		[/variable]
		[then]
			{VARIABLE unit.variables.pointpike 0}
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]
#reset value
[event]
	name=attack_end
	first_time_only=no
	[filter]
		[filter_wml]
			[attack]
				pointpike=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].pointpike
			greater_than=0
		[/variable]
		[then]
			{VARIABLE unit.variables.pointpike 0}
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]

#cleave
[event]
	name=attacker_hits,attacker_misses
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[attack]
				cleave=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].cleave
			greater_than=0
		[/variable]
		[then]
			[store_unit]
				[filter]
					[filter_adjacent]
						id=$unit.id
						is_enemy=yes
					[/filter_adjacent]
					[and]
						[filter_adjacent]
							id=$second_unit.id
						[/filter_adjacent]
					[/and]
				[/filter]
				variable=cleave_store
			[/store_unit]	
			[switch]
				variable=unit.variables.abilities.cleave
				[case]
					value=1
					{VARIABLE cleave_damage $weapon.damage} 
					{VARIABLE_OP cleave_damage divide 8}
				[/case]
				[case]
					value=2
					{VARIABLE cleave_damage $weapon.damage} 
					{VARIABLE_OP cleave_damage divide 6}
				[/case]
				[case]
					value=3
					{VARIABLE cleave_damage $weapon.damage} 
					{VARIABLE_OP cleave_damage divide 4}
				[/case]
			[/switch]
			{FOREACH cleave_store i}
				{DEFENSE_CALCULATOR $cleave_store[$i].x $cleave_store[$i].y "cleave_store[$i]"}
				{VARIABLE_OP defense sub 100}
				[switch]
					variable=unit.variables.abilities.cleave
					[case]
						value=1
						{VARIABLE_OP defense divide 2}
					[/case]
					[case]
						value=2
						{VARIABLE_OP defense multiply 2}
						{VARIABLE_OP defense divide 3}
					[/case]
					[case]
						value=3
						{VARIABLE_OP defense multiply 3}
						{VARIABLE_OP defense divide 4}
					[/case]
				[/switch]
				{VARIABLE_OP defense add 100}
				{RANDOM 1..100}
				[if]
					[variable]
						name=defense
						greater_than_equal_to=$random
					[/variable]
					[then]
						#for now just ignore resistance abilities
						{VARIABLE_OP cleave_damage multiply $cleave_store[$i].resistance.$weapon.type|}
						{VARIABLE_OP cleave_damage divide 100}
						[if]	
							[variable]
								name=cleave_damage
								less_than=1
							[/variable]
							[then]
								{VARIABLE cleave_damage 1}
							[/then]
						[/if]	
						{VARIABLE_OP cleave_store[$i].hitpoints sub $cleave_damage}
						[unstore_unit]
							variable=cleave_store[$i]
							text="$cleave_damage"
							{COLOR_HARM}
						[/unstore_unit]
						[if]
							[variable]
								name=cleave_store[$i].hitpoints
								less_than=1
							[/variable]
							[then]
								[fire_event]
									name=die
									[primary_unit]
										x,y=$cleave_store[$i].x,$cleave_store[$i].y
									[/primary_unit]
									[secondary_unit]
										x,y=$unit.x,$unit.y
									[/secondary_unit]
								[/fire_event]
								[kill]
									id=$cleave_store[$i].id
									animate=yes
								[/kill]
								[if]
									[variable]
										name=cleave_store[$i].level
										equals=0
									[/variable]
									[then]
										{VARIABLE_OP specials_exp_gained add 4}
									[/then]
									[else]
										{VARIABLE cleave_exp $cleave_store[$i].level}
										{VARIABLE_OP cleave_exp multiply 8}
										{VARIABLE_OP specials_exp_gained add $cleave_exp}
									[/else]
								[/if]
							[/then]
						[/if]
					[/then]
				[/if]
			{NEXT i}	
		[/then]
	[/if]
[/event]
[event]
	name=attack_end
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[attack]
				cleave=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].cleave
			greater_than=0
		[/variable]
		[then]
			[if]
				[variable]
					name=specials_exp_gained
					greater_than=0
				[/variable]
				[then]
					{VARIABLE_OP unit.experience add $specials_exp_gained}	
					[unstore_unit]
						variable=unit
					[/unstore_unit]
				[/then]
			[/if]
		[/then]
	[/if]
[/event]

#remaining ammo
[event]
	name=attack_end
	first_time_only=no
	[filter_attack]
		range=ranged
	[/filter_attack]
	[filter]
		[filter_wml]
			[attack]
				remaining_ammo=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].remaining_ammo
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=second_unit.hitpoints
				less_than_equal_to=0
			[/variable]
		[/and]
		[then]
			{VARIABLE specials_weapon_number $weapon.number}
			{VARIABLE_OP specials_weapon_number sub $specials_attacks}
			[switch]
				variable=unit.variables.abilities.remaining_ammo_$weapon.class
				[case]
					value=1
					{VARIABLE_OP specials_weapon_number sub 1}
				[/case]
				[case]
					value=3
					{VARIABLE_OP specials_weapon_number add 1}
				[/case]
			[/switch]
			[if]
				[variable]
					name=specials_weapon_number
					greater_than=0
				[/variable]
				[then]
					[if]
						[variable]
							name=unit.variables.blocked_attacks
							numerical_equals=0
						[/variable]
						[then]
							{VARIABLE unit.variables.blocked_attacks 1}
							{VARIABLE unit.variables.weapon_block_class $weapon.class}
							{VARIABLE unit.variables.ammo_stored $weapon.attack_number}
							{VARIABLE unit.variables.base_ammo $weapon.number}
							{FOREACH unit.attack a}
								{VARIABLE unit.attack[$a].attack_weight 0}
							{NEXT a}
							{CLEAR_VARIABLE unit.attack[$weapon.attack_number].attack_weight}
						[/then]
					[/if]
					{VARIABLE unit.variables.current_ammo $specials_weapon_number}
					{VARIABLE unit.attack[$weapon.attack_number].number $specials_weapon_number}
					{VARIABLE unit.attacks_left 1}
					[unstore_unit]
						variable=unit
					[/unstore_unit]
				[/then]
				[else]
					[if]
						[variable]
							name=unit.variables.ammo_stored
							greater_than_equal_to=0
						[/variable]
						[then]
							{VARIABLE unit.attack[$unit.variables.ammo_stored].number $unit.variables.base_ammo}
							{VARIABLE unit.variables.base_ammo 0}
							{VARIABLE unit.variables.ammo_stored -1}
							[unstore_unit]
								variable=unit
							[/unstore_unit]
						[/then]
					[/if]
				[/else]
			[/if]
		[/then]
	[/if]
[/event]
#reset blocked attacks on side turn
[event]
	name=side turn 
	first_time_only=no
	[if]
		[have_unit]
			[filter_wml]
				[variables]
					blocked_attacks=1
				[/variables]
			[/filter_wml]
		[/have_unit]
		[then]
			[store_unit]
				[filter]
					[filter_wml]
						[variables]
							blocked_attacks=1
						[/variables]
					[/filter_wml]
				[/filter]
				variable=unit
			[/store_unit]
			{VARIABLE unit.variables.blocked_attacks 0}			
			{FOREACH unit.attack a}
				[if]
					[variable]
						name=unit.attack[$a].attack_weight
						numerical_equals=0
					[/variable]
					[then]
						{CLEAR_VARIABLE unit.attack[$a].attack_weight}
					[/then]
				[/if]
			{NEXT a}
			[if]
				[variable]
					name=unit.variables.ammo_stored
					greater_than_equal_to=0
				[/variable]
				[then]
					{VARIABLE unit.attack[$unit.variables.ammo_stored].number $unit.variables.base_ammo}
					{VARIABLE unit.variables.base_ammo 0}
					{VARIABLE unit.variables.ammo_stored -1}
				[/then]
			[/if]
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]
		
#bloodlust
[event]
	name=attack_end
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[attack]
				bloodlust=1
			[/attack]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].bloodlust
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=second_unit.hitpoints
				less_than_equal_to=0
			[/variable]
		[/and]
		[and]
			[variable]
				name=unit.variables.abilities.bloodlust
				greater_than_equal_to=$specials_attacks
			[/variable]
		[/and]
		[then]
			{VARIABLE unit.attacks_left 1}
			[if]
				[variable]
					name=unit.variables.blocked_attacks
					numerical_equals=0
				[/variable]
				[then]
					{VARIABLE unit.variables.blocked_attacks 1}
					{VARIABLE unit.variables.weapon_block_class bloodlust}
					{FOREACH unit.attack a}
							[if]
								[variable]
									name=unit.attack[$a].bloodlust
									greater_than=0
								[/variable]
								[then]
								[/then]
								[else]
									{VARIABLE unit.attack[$a].attack_weight 0}
								[/else]
							[/if]
					{NEXT a}
				[/then]
			[/if]
			[if]
				[variable]
					name=unit.variables.abilities.bloodlust
					greater_than=$specials_attacks
				[/variable]
				[then]
					{VARIABLE unit.moves 1}
				[/then]
			[/if]
		    [unstore_unit]
		        variable=unit
		    [/unstore_unit]
	    [/then]
	[/if]
[/event]

#deadly grace
[event]
	name=defender_misses
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[variables]
				[abilities]
					grace=1
				[/abilities]
			[/variables]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].grace
			greater_than=0
		[/variable]
		[and]
			[variable]
				#can reuse this variable since weapons that work with storm wouldn't work with deadly grace
				name=specials_defender_attacks
				numerical_equals=0
			[/variable]
		[/and]
		[then]
			{VARIABLE specials_defender_attacks 1}
		[/then]
	[/if]
[/event]
[event]
	name=defender_hits
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[variables]
				[abilities]
					grace=1
				[/abilities]
			[/variables]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].grace
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=specials_defender_attacks
				greater_than_equal_to=0
			[/variable]
		[/and]
		[then]
			{VARIABLE specials_defender_attacks -1}
		[/then]
	[/if]
[/event]
[event]
	name=attack_end
	first_time_only=no
	[filter_attack]
		range=melee
	[/filter_attack]
	[filter]
		[filter_wml]
			[variables]
				[abilities]
					grace=1
				[/abilities]
			[/variables]
		[/filter_wml]
	[/filter]
	[if]
		[variable]
			name=unit.attack[$weapon.attack_number].grace
			greater_than=0
		[/variable]
		[and]
			[variable]
				name=specials_defender_attacks
				numerical_equals=1
			[/variable]
		[/and]
		[then]
			{VARIABLE unit.attacks_left 1}
			[if]
				[variable]
					name=unit.variables.blocked_attacks
					numerical_equals=0
				[/variable]
				[then]
					{VARIABLE unit.variables.blocked_attacks 1}
					{VARIABLE unit.variables.weapon_block_class grace}
					{FOREACH unit.attack a}
						[if]
							[variable]
								name=unit.attack[$a].grace
								greater_than=0
							[/variable]
							[then]
							[/then]
							[else]
								{VARIABLE unit.attack[$a].attack_weight 0}
							[/else]
						[/if]
					{NEXT a}
				[/then]
			[/if]
			[unstore_unit]
				variable=unit
			[/unstore_unit]
		[/then]
	[/if]
[/event]

[event]
    name=die
    first_time_only=no

    [filter]
        [not]
            [filter_wml]
                [status]
                    not_living="yes"
                [/status]
            [/filter_wml]
        [/not]
    [/filter]

    [filter_second]
        ability=feeding_MODRPG
    [/filter_second]

    [unstore_unit]
        variable=second_unit
        {COLOR_HEAL}
        text= _ "+1 max HP"
        find_vacant=no
    [/unstore_unit]

    [object]
        silent=yes
        duration=forever

        [filter]
            x,y=$x2,$y2
        [/filter]

        [effect]
            apply_to=hitpoints
            increase_total=1
            increase=1
        [/effect]
    [/object]
[/event]


#battle tutor
[event]
    name=attack_end
    [filter]
        [filter_adjacent]
            type=WBD Saurian Sage,WBD Saurian Mystic
            is_enemy=false
        [/filter_adjacent]
    [/filter]
    [set_variable]
        name=unit.experience
        add=1
    [/set_variable]
    [unstore_unit]
        variable=unit
        text=_ "1"
        red,green,blue=0,200,255
    [/unstore_unit]
    first_time_only=no
[/event]
[event]
    name=attack_end
    [filter_second]
        [filter_adjacent]
            type=WBD Saurian Sage,WBD Saurian Mystic
            is_enemy=false
        [/filter_adjacent]
    [/filter_second]
    [set_variable]
        name=second_unit.experience
        add=1
    [/set_variable]
    [unstore_unit]
        variable=second_unit
        text=_ "1"
        red,green,blue=0,200,255
    [/unstore_unit]
    first_time_only=no
[/event]